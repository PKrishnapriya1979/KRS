{"ast":null,"code":"import * as React from 'react';\nimport { useGridRegisterPreProcessor } from '@mui/x-data-grid/internals';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD, GRID_DETAIL_PANEL_TOGGLE_COL_DEF } from './gridDetailPanelToggleColDef';\nexport const useGridDetailPanelPreProcessors = (apiRef, props) => {\n  const addToggleColumn = React.useCallback(columnsState => {\n    if (props.getDetailPanelContent == null) {\n      // Remove the toggle column, when it exists\n      if (columnsState.lookup[GRID_DETAIL_PANEL_TOGGLE_FIELD]) {\n        delete columnsState.lookup[GRID_DETAIL_PANEL_TOGGLE_FIELD];\n        columnsState.all = columnsState.all.filter(field => field !== GRID_DETAIL_PANEL_TOGGLE_FIELD);\n      }\n\n      return columnsState;\n    } // Don't add the toggle column if there's already one\n    // The user might have manually added it to have it in a custom position\n\n\n    if (columnsState.lookup[GRID_DETAIL_PANEL_TOGGLE_FIELD]) {\n      return columnsState;\n    } // Othewise, add the toggle column at the beginning\n\n\n    columnsState.all = [GRID_DETAIL_PANEL_TOGGLE_FIELD, ...columnsState.all];\n    columnsState.lookup[GRID_DETAIL_PANEL_TOGGLE_FIELD] = GRID_DETAIL_PANEL_TOGGLE_COL_DEF;\n    return columnsState;\n  }, [props.getDetailPanelContent]);\n  useGridRegisterPreProcessor(apiRef, 'hydrateColumns', addToggleColumn);\n};","map":{"version":3,"sources":["C:/Users/Admin/Documents/KRS/Application1/client/node_modules/@mui/x-data-grid-pro/hooks/features/detailPanel/useGridDetailPanelPreProcessors.js"],"names":["React","useGridRegisterPreProcessor","GRID_DETAIL_PANEL_TOGGLE_FIELD","GRID_DETAIL_PANEL_TOGGLE_COL_DEF","useGridDetailPanelPreProcessors","apiRef","props","addToggleColumn","useCallback","columnsState","getDetailPanelContent","lookup","all","filter","field"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,2BAAT,QAA4C,4BAA5C;AACA,SAASC,8BAAT,EAAyCC,gCAAzC,QAAiF,+BAAjF;AACA,OAAO,MAAMC,+BAA+B,GAAG,CAACC,MAAD,EAASC,KAAT,KAAmB;AAChE,QAAMC,eAAe,GAAGP,KAAK,CAACQ,WAAN,CAAkBC,YAAY,IAAI;AACxD,QAAIH,KAAK,CAACI,qBAAN,IAA+B,IAAnC,EAAyC;AACvC;AACA,UAAID,YAAY,CAACE,MAAb,CAAoBT,8BAApB,CAAJ,EAAyD;AACvD,eAAOO,YAAY,CAACE,MAAb,CAAoBT,8BAApB,CAAP;AACAO,QAAAA,YAAY,CAACG,GAAb,GAAmBH,YAAY,CAACG,GAAb,CAAiBC,MAAjB,CAAwBC,KAAK,IAAIA,KAAK,KAAKZ,8BAA3C,CAAnB;AACD;;AAED,aAAOO,YAAP;AACD,KATuD,CAStD;AACF;;;AAGA,QAAIA,YAAY,CAACE,MAAb,CAAoBT,8BAApB,CAAJ,EAAyD;AACvD,aAAOO,YAAP;AACD,KAfuD,CAetD;;;AAGFA,IAAAA,YAAY,CAACG,GAAb,GAAmB,CAACV,8BAAD,EAAiC,GAAGO,YAAY,CAACG,GAAjD,CAAnB;AACAH,IAAAA,YAAY,CAACE,MAAb,CAAoBT,8BAApB,IAAsDC,gCAAtD;AACA,WAAOM,YAAP;AACD,GArBuB,EAqBrB,CAACH,KAAK,CAACI,qBAAP,CArBqB,CAAxB;AAsBAT,EAAAA,2BAA2B,CAACI,MAAD,EAAS,gBAAT,EAA2BE,eAA3B,CAA3B;AACD,CAxBM","sourcesContent":["import * as React from 'react';\nimport { useGridRegisterPreProcessor } from '@mui/x-data-grid/internals';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD, GRID_DETAIL_PANEL_TOGGLE_COL_DEF } from './gridDetailPanelToggleColDef';\nexport const useGridDetailPanelPreProcessors = (apiRef, props) => {\n  const addToggleColumn = React.useCallback(columnsState => {\n    if (props.getDetailPanelContent == null) {\n      // Remove the toggle column, when it exists\n      if (columnsState.lookup[GRID_DETAIL_PANEL_TOGGLE_FIELD]) {\n        delete columnsState.lookup[GRID_DETAIL_PANEL_TOGGLE_FIELD];\n        columnsState.all = columnsState.all.filter(field => field !== GRID_DETAIL_PANEL_TOGGLE_FIELD);\n      }\n\n      return columnsState;\n    } // Don't add the toggle column if there's already one\n    // The user might have manually added it to have it in a custom position\n\n\n    if (columnsState.lookup[GRID_DETAIL_PANEL_TOGGLE_FIELD]) {\n      return columnsState;\n    } // Othewise, add the toggle column at the beginning\n\n\n    columnsState.all = [GRID_DETAIL_PANEL_TOGGLE_FIELD, ...columnsState.all];\n    columnsState.lookup[GRID_DETAIL_PANEL_TOGGLE_FIELD] = GRID_DETAIL_PANEL_TOGGLE_COL_DEF;\n    return columnsState;\n  }, [props.getDetailPanelContent]);\n  useGridRegisterPreProcessor(apiRef, 'hydrateColumns', addToggleColumn);\n};"]},"metadata":{},"sourceType":"module"}