{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\KRS\\\\Application1\\\\client\\\\src\\\\components\\\\taskassigned.js\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport axios from 'axios';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Taskassignedby extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      task_acc: []\n    };\n\n    this.getdata = () => {\n      this.userdata = sessionStorage.getItem('userdata');\n\n      if (sessionStorage.length === 0) {\n        this.empid = '';\n\n        /*#__PURE__*/\n        _jsxDEV(Redirect, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 14\n        }, this);\n      } else {\n        this.userdata = JSON.parse(this.userdata);\n        this.empid = this.userdata.empid;\n        console.log(this.empid);\n      }\n\n      axios.post('http://localhost:3001/taskassignedbyme', {\n        empid: this.empid\n      }).then(response => {\n        this.setState({\n          loading: false,\n          task_acc: response.data\n        });\n        console.log(this.state.task_acc);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getdata(); //const {sel_task} = this.props.location.state;\n  }\n\n  //k.pr_id, k.task_name, k.assignee, k.ass_date, t.rep_date, t.rep_outcome, t.rep_url\n  render() {\n    console.log(\"in task completed\");\n    const t_data = this.state.task_acc;\n    console.log(t_data);\n    const task_acc_columns = [{\n      headerName: 'ID',\n      field: 'pr_id',\n      width: 100\n    }, {\n      headerName: 'Task Name',\n      field: 'task_name',\n      width: 250\n    }, {\n      headerName: 'Sub Task Name',\n      field: 'Sub_name',\n      width: 250\n    }, {\n      headerName: 'Assigned to',\n      field: 'empname',\n      width: 170\n    }, {\n      headerName: 'Date of Assignement',\n      field: 'ass_date',\n      width: 170\n    }, {\n      headerName: 'Expected completion',\n      field: 'target_date',\n      width: 170\n    }, {\n      headerName: 'Status',\n      field: 'pr_status',\n      width: 170\n    }];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        height: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flexGrow: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(DataGrid, {\n          id: \"task_assign\",\n          getRowId: rows => rows.sub,\n          rows: t_data,\n          columns: task_acc_columns,\n          pagesize: 10\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Admin/Documents/KRS/Application1/client/src/components/taskassigned.js"],"names":["React","Link","Redirect","axios","DataGrid","Taskassignedby","Component","state","task_acc","getdata","userdata","sessionStorage","getItem","length","empid","JSON","parse","console","log","post","then","response","setState","loading","data","componentDidMount","render","t_data","task_acc_columns","headerName","field","width","display","height","flexGrow","rows","sub"],"mappings":"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","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport React from 'react';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\n\r\nexport default class Taskassignedby extends React.Component {\r\n  \r\n  state = {\r\n    task_acc : [],\r\n  } \r\n  componentDidMount(){\r\n    this.getdata();\r\n    //const {sel_task} = this.props.location.state;\r\n  }\r\n  getdata=()=>\r\n    {\r\n        this.userdata = sessionStorage.getItem('userdata');\r\n        if (sessionStorage.length === 0 )\r\n           { this.empid = '';\r\n             <Redirect to = '/'></Redirect>}\r\n        else {\r\n           this.userdata = JSON.parse(this.userdata);\r\n           this.empid= this.userdata.empid;\r\n           console.log(this.empid);\r\n          }  \r\n        axios.post('http://localhost:3001/taskassignedbyme',{empid:this.empid}).then((response)=>{\r\n                this.setState({loading:false,task_acc:response.data});\r\n                console.log(this.state.task_acc);\r\n      });             \r\n    }\r\n    \r\n    //k.pr_id, k.task_name, k.assignee, k.ass_date, t.rep_date, t.rep_outcome, t.rep_url\r\n    render() {\r\n      console.log(\"in task completed\");\r\n      const t_data = this.state.task_acc;\r\n      console.log(t_data);        \r\n      const task_acc_columns = [\r\n        {\r\n          headerName : 'ID',\r\n          field  :'pr_id',\r\n          width: 100\r\n        },\r\n        {\r\n          headerName : 'Task Name',\r\n          field  :'task_name',\r\n          width: 250\r\n        },\r\n        {\r\n          headerName : 'Sub Task Name',\r\n          field  :'Sub_name',\r\n          width: 250\r\n        },\r\n        {\r\n          headerName : 'Assigned to',\r\n          field :'empname',\r\n          width: 170\r\n        },\r\n        {\r\n          headerName : 'Date of Assignement',\r\n          field :'ass_date',\r\n          width: 170\r\n        },\r\n        {\r\n          headerName : 'Expected completion',\r\n          field :'target_date',\r\n          width: 170\r\n        },\r\n        {\r\n          headerName : 'Status',\r\n          field  :'pr_status',\r\n          width: 170,\r\n         }      \r\n       ]; \r\n    return(\r\n      <div style = {{display: 'flex', height: '100%'}}>\r\n        <div style={{ flexGrow: 1 }}>\r\n        <DataGrid id = \"task_assign\" \r\n        getRowId={rows => rows.sub}\r\n        rows = {t_data}\r\n        columns = {task_acc_columns}\r\n        pagesize = {10}\r\n        />\r\n     </div>\r\n      </div>\r\n    );\r\n  };   \r\n}   \r\n"]},"metadata":{},"sourceType":"module"}