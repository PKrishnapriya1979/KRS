{"ast":null,"code":"/* eslint-disable */\nconst _keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\nfunction utf8Encode(str) {\n  str = str.replace(/\\r\\n/g, '\\n');\n  let utftext = '';\n\n  for (let n = 0; n < str.length; n++) {\n    const c = str.charCodeAt(n);\n\n    if (c < 128) {\n      utftext += String.fromCharCode(c);\n    } else if (c > 127 && c < 2048) {\n      utftext += String.fromCharCode(c >> 6 | 192);\n      utftext += String.fromCharCode(c & 63 | 128);\n    } else {\n      utftext += String.fromCharCode(c >> 12 | 224);\n      utftext += String.fromCharCode(c >> 6 & 63 | 128);\n      utftext += String.fromCharCode(c & 63 | 128);\n    }\n  }\n\n  return utftext;\n}\n\nfunction utf8Decode(utftext) {\n  let string = '';\n  let i = 0;\n  let c, c2, c3;\n  c = c2 = c3 = 0;\n\n  while (i < utftext.length) {\n    c = utftext.charCodeAt(i);\n\n    if (c < 128) {\n      string += String.fromCharCode(c);\n      i++;\n    } else if (c > 191 && c < 224) {\n      c2 = utftext.charCodeAt(i + 1);\n      string += String.fromCharCode((c & 31) << 6 | c2 & 63);\n      i += 2;\n    } else {\n      c2 = utftext.charCodeAt(i + 1);\n      c3 = utftext.charCodeAt(i + 2);\n      string += String.fromCharCode((c & 15) << 12 | (c2 & 63) << 6 | c3 & 63);\n      i += 3;\n    }\n  }\n\n  return string;\n}\n\nexport const base64Decode = input => {\n  let output = '';\n  let chr1, chr2, chr3;\n  let enc1, enc2, enc3, enc4;\n  let i = 0;\n  input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n\n  while (i < input.length) {\n    enc1 = _keyStr.indexOf(input.charAt(i++));\n    enc2 = _keyStr.indexOf(input.charAt(i++));\n    enc3 = _keyStr.indexOf(input.charAt(i++));\n    enc4 = _keyStr.indexOf(input.charAt(i++));\n    chr1 = enc1 << 2 | enc2 >> 4;\n    chr2 = (enc2 & 15) << 4 | enc3 >> 2;\n    chr3 = (enc3 & 3) << 6 | enc4;\n    output = output + String.fromCharCode(chr1);\n\n    if (enc3 != 64) {\n      output = output + String.fromCharCode(chr2);\n    }\n\n    if (enc4 != 64) {\n      output = output + String.fromCharCode(chr3);\n    }\n  }\n\n  output = utf8Decode(output);\n  return output;\n};\nexport const base64Encode = input => {\n  let output = '';\n  let chr1, chr2, chr3, enc1, enc2, enc3, enc4;\n  let i = 0;\n  input = utf8Encode(input);\n\n  while (i < input.length) {\n    chr1 = input.charCodeAt(i++);\n    chr2 = input.charCodeAt(i++);\n    chr3 = input.charCodeAt(i++);\n    enc1 = chr1 >> 2;\n    enc2 = (chr1 & 3) << 4 | chr2 >> 4;\n    enc3 = (chr2 & 15) << 2 | chr3 >> 6;\n    enc4 = chr3 & 63;\n\n    if (isNaN(chr2)) {\n      enc3 = enc4 = 64;\n    } else if (isNaN(chr3)) {\n      enc4 = 64;\n    }\n\n    output = output + _keyStr.charAt(enc1) + _keyStr.charAt(enc2) + _keyStr.charAt(enc3) + _keyStr.charAt(enc4);\n  }\n\n  return output;\n};","map":{"version":3,"sources":["C:/Users/Admin/Documents/KRS/Application1/client/node_modules/@mui/x-license-pro/encoding/base64.js"],"names":["_keyStr","utf8Encode","str","replace","utftext","n","length","c","charCodeAt","String","fromCharCode","utf8Decode","string","i","c2","c3","base64Decode","input","output","chr1","chr2","chr3","enc1","enc2","enc3","enc4","indexOf","charAt","base64Encode","isNaN"],"mappings":"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","sourcesContent":["/* eslint-disable */\nconst _keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\nfunction utf8Encode(str) {\n  str = str.replace(/\\r\\n/g, '\\n');\n  let utftext = '';\n\n  for (let n = 0; n < str.length; n++) {\n    const c = str.charCodeAt(n);\n\n    if (c < 128) {\n      utftext += String.fromCharCode(c);\n    } else if (c > 127 && c < 2048) {\n      utftext += String.fromCharCode(c >> 6 | 192);\n      utftext += String.fromCharCode(c & 63 | 128);\n    } else {\n      utftext += String.fromCharCode(c >> 12 | 224);\n      utftext += String.fromCharCode(c >> 6 & 63 | 128);\n      utftext += String.fromCharCode(c & 63 | 128);\n    }\n  }\n\n  return utftext;\n}\n\nfunction utf8Decode(utftext) {\n  let string = '';\n  let i = 0;\n  let c, c2, c3;\n  c = c2 = c3 = 0;\n\n  while (i < utftext.length) {\n    c = utftext.charCodeAt(i);\n\n    if (c < 128) {\n      string += String.fromCharCode(c);\n      i++;\n    } else if (c > 191 && c < 224) {\n      c2 = utftext.charCodeAt(i + 1);\n      string += String.fromCharCode((c & 31) << 6 | c2 & 63);\n      i += 2;\n    } else {\n      c2 = utftext.charCodeAt(i + 1);\n      c3 = utftext.charCodeAt(i + 2);\n      string += String.fromCharCode((c & 15) << 12 | (c2 & 63) << 6 | c3 & 63);\n      i += 3;\n    }\n  }\n\n  return string;\n}\n\nexport const base64Decode = input => {\n  let output = '';\n  let chr1, chr2, chr3;\n  let enc1, enc2, enc3, enc4;\n  let i = 0;\n  input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n\n  while (i < input.length) {\n    enc1 = _keyStr.indexOf(input.charAt(i++));\n    enc2 = _keyStr.indexOf(input.charAt(i++));\n    enc3 = _keyStr.indexOf(input.charAt(i++));\n    enc4 = _keyStr.indexOf(input.charAt(i++));\n    chr1 = enc1 << 2 | enc2 >> 4;\n    chr2 = (enc2 & 15) << 4 | enc3 >> 2;\n    chr3 = (enc3 & 3) << 6 | enc4;\n    output = output + String.fromCharCode(chr1);\n\n    if (enc3 != 64) {\n      output = output + String.fromCharCode(chr2);\n    }\n\n    if (enc4 != 64) {\n      output = output + String.fromCharCode(chr3);\n    }\n  }\n\n  output = utf8Decode(output);\n  return output;\n};\nexport const base64Encode = input => {\n  let output = '';\n  let chr1, chr2, chr3, enc1, enc2, enc3, enc4;\n  let i = 0;\n  input = utf8Encode(input);\n\n  while (i < input.length) {\n    chr1 = input.charCodeAt(i++);\n    chr2 = input.charCodeAt(i++);\n    chr3 = input.charCodeAt(i++);\n    enc1 = chr1 >> 2;\n    enc2 = (chr1 & 3) << 4 | chr2 >> 4;\n    enc3 = (chr2 & 15) << 2 | chr3 >> 6;\n    enc4 = chr3 & 63;\n\n    if (isNaN(chr2)) {\n      enc3 = enc4 = 64;\n    } else if (isNaN(chr3)) {\n      enc4 = 64;\n    }\n\n    output = output + _keyStr.charAt(enc1) + _keyStr.charAt(enc2) + _keyStr.charAt(enc3) + _keyStr.charAt(enc4);\n  }\n\n  return output;\n};"]},"metadata":{},"sourceType":"module"}