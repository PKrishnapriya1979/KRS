{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\KRS\\\\Application1\\\\client\\\\src\\\\components\\\\task_completed.js\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport axios from 'axios';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Taskcompleted extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      task_acc: []\n    };\n\n    this.getdata = () => {\n      this.userdata = sessionStorage.getItem('userdata');\n\n      if (sessionStorage.length === 0) {\n        this.empid = '';\n\n        /*#__PURE__*/\n        _jsxDEV(Redirect, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 14\n        }, this);\n      } else {\n        this.userdata = JSON.parse(this.userdata);\n        this.empid = this.userdata.empid;\n        console.log(this.empid);\n      }\n\n      axios.post('http://localhost:3001/taskcompleted', {\n        empid: this.empid\n      }).then(response => {\n        this.setState({\n          task_acc: response.data\n        });\n      });\n      /*axios.post('http://localhost:3001/subtaskcompleted',{empid:this.empid}).then((response)=>{\r\n        this.setState({loading:false,sub_task_acc:response.data});\r\n      });*/\n    };\n  }\n\n  componentDidMount() {\n    this.getdata(); //const {sel_task} = this.props.location.state;\n  }\n\n  //k.pr_id, k.task_name, k.assignee, k.ass_date, t.rep_date, t.rep_outcome, t.rep_url\n  render() {\n    alert(\"welcome\" + this.empid);\n    console.log(\"in task completed\");\n    const t_data = this.state.task_acc;\n    console.log(t_data[0]);\n    const task_acc_columns = [{\n      headerName: 'ID',\n      field: 'pr_id',\n      width: 100\n    }, {\n      headerName: 'Task Name',\n      field: 'task_name',\n      width: 250\n    }, {\n      headerName: 'Assigned By',\n      field: 'assignee',\n      width: 170\n    }, {\n      headerName: 'Date of Assignement',\n      field: 'ass_date',\n      width: 170\n    }, {\n      headerName: 'Date of Completion',\n      field: 'r_date',\n      width: 170\n    }, {\n      headerName: 'Outcome',\n      field: 'rep_outcome',\n      width: 150\n    }, {\n      headerName: 'Report',\n      field: \"rep_url\",\n      width: 170\n    }];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: 300,\n          width: window.innerWidth\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flexGrow: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(DataGrid, {\n            id: \"task_display\",\n            getRowId: rows => rows.pr_id,\n            rows: t_data,\n            columns: task_acc_columns\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Admin/Documents/KRS/Application1/client/src/components/task_completed.js"],"names":["React","Link","Redirect","axios","DataGrid","Taskcompleted","Component","state","task_acc","getdata","userdata","sessionStorage","getItem","length","empid","JSON","parse","console","log","post","then","response","setState","data","componentDidMount","render","alert","t_data","task_acc_columns","headerName","field","width","height","window","innerWidth","flexGrow","rows","pr_id"],"mappings":";AAAA,OAAO,sCAAP;AACA,OAAO,wCAAP;AACA,OAAO,+CAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,EAAcC,QAAd,QAA6B,kBAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,wBAAzB;;AAEA,OAAO,MAAMC,aAAN,SAA4BL,KAAK,CAACM,SAAlC,CAA4C;AAAA;AAAA;AAAA,SACjDC,KADiD,GACzC;AACNC,MAAAA,QAAQ,EAAG;AADL,KADyC;;AAAA,SAWjDC,OAXiD,GAWzC,MACN;AACI,WAAKC,QAAL,GAAgBC,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAhB;;AACA,UAAID,cAAc,CAACE,MAAf,KAA0B,CAA9B,EACG;AAAE,aAAKC,KAAL,GAAa,EAAb;;AACA;AAAA,gBAAC,QAAD;AAAU,UAAA,EAAE,EAAG;AAAf;AAAA;AAAA;AAAA;AAAA;AAA+B,OAFpC,MAGK;AACF,aAAKJ,QAAL,GAAgBK,IAAI,CAACC,KAAL,CAAW,KAAKN,QAAhB,CAAhB;AACA,aAAKI,KAAL,GAAY,KAAKJ,QAAL,CAAcI,KAA1B;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAjB;AACA;;AACHX,MAAAA,KAAK,CAACgB,IAAN,CAAW,qCAAX,EAAiD;AAACL,QAAAA,KAAK,EAAC,KAAKA;AAAZ,OAAjD,EAAqEM,IAArE,CAA2EC,QAAD,IAAY;AAC9E,aAAKC,QAAL,CAAc;AAACd,UAAAA,QAAQ,EAACa,QAAQ,CAACE;AAAnB,SAAd;AACT,OAFC;AAGF;AACN;AACA;AACO,KA5B4C;AAAA;;AAKjDC,EAAAA,iBAAiB,GAAE;AAEjB,SAAKf,OAAL,GAFiB,CAIjB;AACD;;AAoBC;AACAgB,EAAAA,MAAM,GAAG;AACPC,IAAAA,KAAK,CAAC,YAAY,KAAKZ,KAAlB,CAAL;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,UAAMS,MAAM,GAAG,KAAKpB,KAAL,CAAWC,QAA1B;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAYS,MAAM,CAAC,CAAD,CAAlB;AACA,UAAMC,gBAAgB,GAAG,CACvB;AACEC,MAAAA,UAAU,EAAG,IADf;AAEEC,MAAAA,KAAK,EAAG,OAFV;AAGEC,MAAAA,KAAK,EAAE;AAHT,KADuB,EAMvB;AACEF,MAAAA,UAAU,EAAG,WADf;AAEEC,MAAAA,KAAK,EAAG,WAFV;AAGEC,MAAAA,KAAK,EAAE;AAHT,KANuB,EAWvB;AACEF,MAAAA,UAAU,EAAG,aADf;AAEEC,MAAAA,KAAK,EAAE,UAFT;AAGEC,MAAAA,KAAK,EAAE;AAHT,KAXuB,EAgBvB;AACEF,MAAAA,UAAU,EAAG,qBADf;AAEEC,MAAAA,KAAK,EAAE,UAFT;AAGEC,MAAAA,KAAK,EAAE;AAHT,KAhBuB,EAqBvB;AACEF,MAAAA,UAAU,EAAG,oBADf;AAEEC,MAAAA,KAAK,EAAE,QAFT;AAGEC,MAAAA,KAAK,EAAE;AAHT,KArBuB,EA0BvB;AACEF,MAAAA,UAAU,EAAG,SADf;AAEEC,MAAAA,KAAK,EAAE,aAFT;AAGEC,MAAAA,KAAK,EAAE;AAHT,KA1BuB,EA+BvB;AACEF,MAAAA,UAAU,EAAG,QADf;AAEEC,MAAAA,KAAK,EAAG,SAFV;AAGEC,MAAAA,KAAK,EAAE;AAHT,KA/BuB,CAAzB;AAsCF,wBACE;AAAA,6BACA;AAAK,QAAA,KAAK,EAAI;AAACC,UAAAA,MAAM,EAAC,GAAR;AAAYD,UAAAA,KAAK,EAACE,MAAM,CAACC;AAAzB,SAAd;AAAA,+BACA;AAAK,UAAA,KAAK,EAAE;AAAEC,YAAAA,QAAQ,EAAE;AAAZ,WAAZ;AAAA,iCACA,QAAC,QAAD;AAAU,YAAA,EAAE,EAAG,cAAf;AACE,YAAA,QAAQ,EAAEC,IAAI,IAAIA,IAAI,CAACC,KADzB;AAEE,YAAA,IAAI,EAAIV,MAFV;AAGE,YAAA,OAAO,EAAIC;AAHb;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AArFgD","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport React from 'react';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\n\r\nexport class Taskcompleted extends React.Component {\r\n  state = {\r\n    task_acc : [],\r\n  } \r\n\r\n  componentDidMount(){\r\n    \r\n    this.getdata();\r\n\r\n    //const {sel_task} = this.props.location.state;\r\n  }\r\n  getdata=()=>\r\n    {\r\n        this.userdata = sessionStorage.getItem('userdata');\r\n        if (sessionStorage.length === 0 )\r\n           { this.empid = '';\r\n             <Redirect to = '/'></Redirect>}\r\n        else {\r\n           this.userdata = JSON.parse(this.userdata);\r\n           this.empid= this.userdata.empid;\r\n           console.log(this.empid);\r\n          }  \r\n        axios.post('http://localhost:3001/taskcompleted',{empid:this.empid}).then((response)=>{\r\n                this.setState({task_acc:response.data});\r\n      });  \r\n      /*axios.post('http://localhost:3001/subtaskcompleted',{empid:this.empid}).then((response)=>{\r\n        this.setState({loading:false,sub_task_acc:response.data});\r\n      });*/    \r\n      }\r\n    \r\n    //k.pr_id, k.task_name, k.assignee, k.ass_date, t.rep_date, t.rep_outcome, t.rep_url\r\n    render() {\r\n      alert(\"welcome\" + this.empid);  \r\n      console.log(\"in task completed\");\r\n      const t_data = this.state.task_acc;\r\n      console.log(t_data[0])\r\n      const task_acc_columns = [\r\n        {\r\n          headerName : 'ID',\r\n          field  :'pr_id',\r\n          width: 100,\r\n        },\r\n        {\r\n          headerName : 'Task Name',\r\n          field  :'task_name',\r\n          width: 250\r\n        },\r\n        {\r\n          headerName : 'Assigned By',\r\n          field :'assignee',\r\n          width: 170\r\n        },\r\n        {\r\n          headerName : 'Date of Assignement',\r\n          field :'ass_date',\r\n          width: 170\r\n        },\r\n        {\r\n          headerName : 'Date of Completion',\r\n          field :'r_date',\r\n          width: 170\r\n        },\r\n        {\r\n          headerName : 'Outcome',\r\n          field :'rep_outcome',\r\n          width: 150\r\n        },\r\n        {\r\n          headerName : 'Report',\r\n          field  :\"rep_url\",\r\n          width: 170\r\n          \r\n         }      \r\n       ]; \r\n    return(\r\n      <div>\r\n      <div style = {{height:300,width:window.innerWidth}}>\r\n      <div style={{ flexGrow: 1 }}>\r\n      <DataGrid id = \"task_display\" \r\n        getRowId={rows => rows.pr_id}\r\n        rows = {t_data}\r\n        columns = {task_acc_columns} />\r\n      </div></div>\r\n      </div>\r\n    );\r\n  };   \r\n}   "]},"metadata":{},"sourceType":"module"}