{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\KRS\\\\Application1\\\\client\\\\src\\\\components\\\\MRHome.js\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport './style.css';\nimport { DataGrid } from '@material-ui/data-grid';\nimport React from 'react';\nimport axios from 'axios'; //var task_acc = [];\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Mrhome extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      temp_record: [],\n      task_acc: [],\n      total_task_assigned: [],\n      total_task_completed: [],\n      dataset: []\n    };\n\n    this.getdata = () => {\n      this.state.temp_record.length = 0;\n      axios.post('http://localhost:3001/total_faculty').then(response => {\n        this.setState({\n          task_acc: response.data\n        });\n        axios.post(\"http://localhost:3001/total_task_assigned\").then(response => {\n          this.setState({\n            total_task_assigned: response.data\n          });\n          axios.post(\"http://localhost:3001/total_task_completed\").then(response => {\n            this.setState({\n              total_task_completed: response.data\n            });\n            axios.post(\"http://localhost:3001/total_task_overdue\").then(response => {\n              this.setState({\n                total_task_overdue: response.data\n              });\n              this.setState({\n                temp_record: this.state.task_acc\n              }); //this.state.temp_record.push(this.state.task_acc)   \n\n              console.log(this.state.temp_record);\n              this.state.temp;\n              /*for(let i = 0; i<=this.state.temp_record.length;i++){\r\n                for(let j = 0; j<=this.state.total_task_assigned.length;j++){\r\n                  if(this.state.temp_record[i].inst_id == this.state.total_task_assigned[j].inst_id)\r\n                     this.state.temp_record[i].push(this.state.total_task_assigned[j][2]);}}*/\n              //console.log(this.state.temp_record);\n\n              /*for(let j = 0; j<=this.state.total_task_completed.length;j++){\r\n                 if(this.state.total_task_assigned[i].inst_id ==this.state.total_task_completed[j].inst_id)\r\n                 this.temp_record.task_assign =  this.state.total_task_completed[j][2];   }\r\n                 console.log(this.state.temp_record);\r\n              }  */\n            });\n          });\n        });\n      });\n    };\n  }\n\n  /*{'Inst_id':0,\r\n  'Inst_name':\"\",\r\n  'count_faculty':0,\r\n  'task_assign':\"\",\r\n  'task_overdue':\"\"}\r\n  ]*/\n  componentDidMount() {\n    this.getdata();\n  }\n\n  /* .*/\n\n  /*for (let i = 0; i<=this.state.total_task_assigned.length;i++){\r\n        this.temp_record.Inst_id = this.state.total_task_assigned[i].inst_id;\r\n        this.temp_record.Inst_name = this.state.total_task_assigned[i].inst_name;\r\n        this.temp_record.count_faculty = this.state.total_task_assigned[i][2];\r\n        \r\n        for(let j = 0; j<=this.state.total_task_overdue.length;j++){\r\n            if(this.state.total_task_assigned[i].inst_id ==this.state.total_task_completed[j].inst_id)\r\n            this.temp_record.task_overdue =  this.state.total_task_completed[j][2]\r\n        }\r\n        console.log(this.temp_record)\r\n    }  \r\n    console.log(\"Array construction\")\r\n    //this.state.dataset.push(this.state.temp_record);\r\n    console.log(this.state.dataset);*/\n  render() {\n    /*const t_data = this.state.dataset;        \r\n    //console.log(t_data);\r\n    const task_acc_columns = [\r\n      {\r\n        headerName : 'ID',\r\n        field  :'inst_id'\r\n        /*width: 100\r\n      },\r\n      {\r\n        headerName : 'Task Name',\r\n        field  :\"institution\",\r\n        width: 250 \r\n      },\r\n      {\r\n          headerName : \"Members\",\r\n          field:\"count(empid)\",\r\n          width:150\r\n      },\r\n      {\r\n          headerName : \"Task Assigned\",\r\n          field:\"\",\r\n          width:150\r\n      },\r\n      {\r\n          headerName : \"Task Completed\",\r\n          field:\"\",\r\n          width:150\r\n      }  ];\r\n        */\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        height: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flexGrow: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Admin/Documents/KRS/Application1/client/src/components/MRHome.js"],"names":["DataGrid","React","axios","Mrhome","Component","state","temp_record","task_acc","total_task_assigned","total_task_completed","dataset","getdata","length","post","then","response","setState","data","total_task_overdue","console","log","temp","componentDidMount","render","display","height","flexGrow"],"mappings":";AAAA,OAAO,sCAAP;AACA,OAAO,wCAAP;AACA,OAAO,+CAAP;AACA,OAAO,aAAP;AACA,SAAQA,QAAR,QAAwB,wBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;;AAEA,OAAO,MAAMC,MAAN,SAAqBF,KAAK,CAACG,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAC1CC,KAD0C,GAClC;AACNC,MAAAA,WAAW,EAAG,EADR;AAENC,MAAAA,QAAQ,EAAC,EAFH;AAGNC,MAAAA,mBAAmB,EAAC,EAHd;AAINC,MAAAA,oBAAoB,EAAC,EAJf;AAKNC,MAAAA,OAAO,EAAG;AALJ,KADkC;;AAAA,SAgB1CC,OAhB0C,GAgBlC,MACN;AACI,WAAKN,KAAL,CAAWC,WAAX,CAAuBM,MAAvB,GAA8B,CAA9B;AACAV,MAAAA,KAAK,CAACW,IAAN,CAAW,qCAAX,EAAkDC,IAAlD,CAAwDC,QAAD,IAAY;AACjE,aAAKC,QAAL,CAAc;AAACT,UAAAA,QAAQ,EAACQ,QAAQ,CAACE;AAAnB,SAAd;AACFf,QAAAA,KAAK,CAACW,IAAN,CAAW,2CAAX,EAAwDC,IAAxD,CAA8DC,QAAD,IAAY;AACvE,eAAKC,QAAL,CAAc;AAACR,YAAAA,mBAAmB,EAACO,QAAQ,CAACE;AAA9B,WAAd;AACFf,UAAAA,KAAK,CAACW,IAAN,CAAW,4CAAX,EAAyDC,IAAzD,CAA+DC,QAAD,IAAY;AACxE,iBAAKC,QAAL,CAAc;AAACP,cAAAA,oBAAoB,EAACM,QAAQ,CAACE;AAA/B,aAAd;AACFf,YAAAA,KAAK,CAACW,IAAN,CAAW,0CAAX,EAAuDC,IAAvD,CAA6DC,QAAD,IAAY;AACtE,mBAAKC,QAAL,CAAc;AAACE,gBAAAA,kBAAkB,EAAGH,QAAQ,CAACE;AAA/B,eAAd;AACA,mBAAKD,QAAL,CAAc;AAACV,gBAAAA,WAAW,EAAC,KAAKD,KAAL,CAAWE;AAAxB,eAAd,EAFsE,CAGtE;;AACAY,cAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAL,CAAWC,WAAvB;AACA,mBAAKD,KAAL,CAAWgB,IAAX;AACA;AACV;AACA;AACA;AACU;;AAKI;AACd;AACA;AACA;AACA;AAAkB,aAnBV;AAmBc,WArBd;AAqBkB,SAvBlB;AAuBsB,OAzBtB;AA2BH,KA9CuC;AAAA;;AAOlC;AACV;AACA;AACA;AACA;AACA;AACIC,EAAAA,iBAAiB,GAAE;AACnB,SAAKX,OAAL;AACD;;AAgCH;;AAEM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEIY,EAAAA,MAAM,GACN;AACE;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI,wBACI;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,MAAM,EAAE;AAA3B,OAAZ;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEI;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAE;AAAZ;AAAZ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAYD;;AA3GyC","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport './style.css';\r\nimport {DataGrid } from '@material-ui/data-grid'\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n//var task_acc = [];\r\n \r\nexport class Mrhome extends React.Component { \r\n  state = {\r\n    temp_record : [],\r\n    task_acc:[],\r\n    total_task_assigned:[],\r\n    total_task_completed:[],\r\n    dataset : []}\r\n          /*{'Inst_id':0,\r\n          'Inst_name':\"\",\r\n          'count_faculty':0,\r\n          'task_assign':\"\",\r\n          'task_overdue':\"\"}\r\n      ]*/\r\n    componentDidMount(){\r\n    this.getdata();\r\n  }\r\n  getdata=()=>\r\n    {\r\n        this.state.temp_record.length=0;      \r\n        axios.post('http://localhost:3001/total_faculty').then((response)=>{\r\n          this.setState({task_acc:response.data});\r\n        axios.post(\"http://localhost:3001/total_task_assigned\").then((response)=>{\r\n          this.setState({total_task_assigned:response.data});\r\n        axios.post(\"http://localhost:3001/total_task_completed\").then((response)=>{\r\n          this.setState({total_task_completed:response.data});\r\n        axios.post(\"http://localhost:3001/total_task_overdue\").then((response)=>{\r\n          this.setState({total_task_overdue : response.data});\r\n          this.setState({temp_record:this.state.task_acc})\r\n          //this.state.temp_record.push(this.state.task_acc)   \r\n          console.log(this.state.temp_record);            \r\n          this.state.temp\r\n          /*for(let i = 0; i<=this.state.temp_record.length;i++){\r\n            for(let j = 0; j<=this.state.total_task_assigned.length;j++){\r\n              if(this.state.temp_record[i].inst_id == this.state.total_task_assigned[j].inst_id)\r\n                 this.state.temp_record[i].push(this.state.total_task_assigned[j][2]);}}*/\r\n          //console.log(this.state.temp_record);\r\n              \r\n\r\n\r\n          \r\n              /*for(let j = 0; j<=this.state.total_task_completed.length;j++){\r\n                 if(this.state.total_task_assigned[i].inst_id ==this.state.total_task_completed[j].inst_id)\r\n                 this.temp_record.task_assign =  this.state.total_task_completed[j][2];   }\r\n                 console.log(this.state.temp_record);\r\n           }  */ }); }); }); });       \r\n        \r\n    }\r\n/* .*/ \r\n\r\n      /*for (let i = 0; i<=this.state.total_task_assigned.length;i++){\r\n            this.temp_record.Inst_id = this.state.total_task_assigned[i].inst_id;\r\n            this.temp_record.Inst_name = this.state.total_task_assigned[i].inst_name;\r\n            this.temp_record.count_faculty = this.state.total_task_assigned[i][2];\r\n            \r\n            for(let j = 0; j<=this.state.total_task_overdue.length;j++){\r\n                if(this.state.total_task_assigned[i].inst_id ==this.state.total_task_completed[j].inst_id)\r\n                this.temp_record.task_overdue =  this.state.total_task_completed[j][2]\r\n            }\r\n            console.log(this.temp_record)\r\n        }  \r\n        console.log(\"Array construction\")\r\n        //this.state.dataset.push(this.state.temp_record);\r\n        console.log(this.state.dataset);*/\r\n    \r\n    render() \r\n    {\r\n      /*const t_data = this.state.dataset;        \r\n      //console.log(t_data);\r\n      const task_acc_columns = [\r\n        {\r\n          headerName : 'ID',\r\n          field  :'inst_id'\r\n          /*width: 100\r\n        },\r\n        {\r\n          headerName : 'Task Name',\r\n          field  :\"institution\",\r\n          width: 250 \r\n        },\r\n        {\r\n            headerName : \"Members\",\r\n            field:\"count(empid)\",\r\n            width:150\r\n        },\r\n        {\r\n            headerName : \"Task Assigned\",\r\n            field:\"\",\r\n            width:150\r\n        },\r\n        {\r\n            headerName : \"Task Completed\",\r\n            field:\"\",\r\n            width:150\r\n        }  ];\r\n          */\r\n    return(\r\n        <div style={{ display: 'flex', height: '100%' }}>\r\n          <h1>report</h1>\r\n            <div style={{ flexGrow: 1 }}>\r\n            {/*}    <DataGrid id = \"task_display\" \r\n                    getRowId={rows => rows.inst_id}\r\n                    rows = {t_data}\r\n                    columns = {task_acc_columns}\r\n    />*/}\r\n            </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}