{"ast":null,"code":"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst GridGroupingColumnLeafCell = props => {\n  var _props$formattedValue;\n\n  const {\n    rowNode\n  } = props;\n  const rootProps = useGridRootProps();\n  const marginLeft = rootProps.rowGroupingColumnMode === 'multiple' ? 1 : rowNode.depth * 2;\n  return /*#__PURE__*/_jsx(Box, {\n    sx: {\n      ml: marginLeft\n    },\n    children: (_props$formattedValue = props.formattedValue) != null ? _props$formattedValue : props.value\n  });\n};\n\nexport { GridGroupingColumnLeafCell };","map":{"version":3,"sources":["C:/Users/Admin/Documents/KRS/Application1/client/node_modules/@mui/x-data-grid-pro/components/GridGroupingColumnLeafCell.js"],"names":["React","Box","useGridRootProps","jsx","_jsx","GridGroupingColumnLeafCell","props","_props$formattedValue","rowNode","rootProps","marginLeft","rowGroupingColumnMode","depth","sx","ml","children","formattedValue","value"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,SAASC,gBAAT,QAAiC,iCAAjC;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;;AAEA,MAAMC,0BAA0B,GAAGC,KAAK,IAAI;AAC1C,MAAIC,qBAAJ;;AAEA,QAAM;AACJC,IAAAA;AADI,MAEFF,KAFJ;AAGA,QAAMG,SAAS,GAAGP,gBAAgB,EAAlC;AACA,QAAMQ,UAAU,GAAGD,SAAS,CAACE,qBAAV,KAAoC,UAApC,GAAiD,CAAjD,GAAqDH,OAAO,CAACI,KAAR,GAAgB,CAAxF;AACA,SAAO,aAAaR,IAAI,CAACH,GAAD,EAAM;AAC5BY,IAAAA,EAAE,EAAE;AACFC,MAAAA,EAAE,EAAEJ;AADF,KADwB;AAI5BK,IAAAA,QAAQ,EAAE,CAACR,qBAAqB,GAAGD,KAAK,CAACU,cAA/B,KAAkD,IAAlD,GAAyDT,qBAAzD,GAAiFD,KAAK,CAACW;AAJrE,GAAN,CAAxB;AAMD,CAdD;;AAgBA,SAASZ,0BAAT","sourcesContent":["import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst GridGroupingColumnLeafCell = props => {\n  var _props$formattedValue;\n\n  const {\n    rowNode\n  } = props;\n  const rootProps = useGridRootProps();\n  const marginLeft = rootProps.rowGroupingColumnMode === 'multiple' ? 1 : rowNode.depth * 2;\n  return /*#__PURE__*/_jsx(Box, {\n    sx: {\n      ml: marginLeft\n    },\n    children: (_props$formattedValue = props.formattedValue) != null ? _props$formattedValue : props.value\n  });\n};\n\nexport { GridGroupingColumnLeafCell };"]},"metadata":{},"sourceType":"module"}