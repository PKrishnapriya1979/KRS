{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"style\", \"className\", \"innerRef\"];\nimport * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled, alpha } from '@mui/material/styles';\nimport { getDataGridUtilityClass, gridClasses, useGridSelector, useGridApiEventHandler, gridVisibleColumnFieldsSelector, GridEvents, GridColumnHeaderSeparatorSides } from '@mui/x-data-grid';\nimport { GridColumnHeaders, GridColumnHeadersInner, useGridColumnHeaders } from '@mui/x-data-grid/internals';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { gridPinnedColumnsSelector, GridPinnedPosition } from '../hooks/features/columnPinning';\nimport { filterColumns } from './DataGridProVirtualScroller';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    leftPinnedColumns,\n    rightPinnedColumns,\n    classes\n  } = ownerState;\n  const slots = {\n    leftPinnedColumns: ['pinnedColumnHeaders', leftPinnedColumns && leftPinnedColumns.length > 0 && `pinnedColumnHeaders--left`],\n    rightPinnedColumns: ['pinnedColumnHeaders', rightPinnedColumns && rightPinnedColumns.length > 0 && `pinnedColumnHeaders--right`]\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n}; // Inspired by https://github.com/material-components/material-components-ios/blob/bca36107405594d5b7b16265a5b0ed698f85a5ee/components/Elevation/src/UIColor%2BMaterialElevation.m#L61\n\n\nconst getOverlayAlpha = elevation => {\n  let alphaValue;\n\n  if (elevation < 1) {\n    alphaValue = 5.11916 * elevation ** 2;\n  } else {\n    alphaValue = 4.5 * Math.log(elevation + 1) + 2;\n  }\n\n  return alphaValue / 100;\n};\n\nconst GridColumnHeadersPinnedColumnHeaders = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PinnedColumnHeaders',\n  overridesResolver: (props, styles) => [{\n    [`&.${gridClasses['pinnedColumnHeaders--left']}`]: styles['pinnedColumnHeaders--left']\n  }, {\n    [`&.${gridClasses['pinnedColumnHeaders--right']}`]: styles['pinnedColumnHeaders--right']\n  }, styles.pinnedColumnHeaders]\n})(_ref => {\n  let {\n    theme,\n    ownerState\n  } = _ref;\n  return _extends({\n    position: 'absolute',\n    overflow: 'hidden',\n    height: '100%',\n    zIndex: 1,\n    display: 'flex',\n    boxShadow: theme.shadows[2],\n    backgroundColor: theme.palette.background.default\n  }, theme.palette.mode === 'dark' && {\n    backgroundImage: `linear-gradient(${alpha('#fff', getOverlayAlpha(2))}, ${alpha('#fff', getOverlayAlpha(2))})`\n  }, ownerState.side === GridPinnedPosition.left && {\n    left: 0\n  }, ownerState.side === GridPinnedPosition.right && {\n    right: 0\n  });\n});\nexport const DataGridProColumnHeaders = /*#__PURE__*/React.forwardRef(function DataGridProColumnHeaders(props, ref) {\n  const {\n    className,\n    innerRef\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const apiRef = useGridApiContext();\n  const visibleColumnFields = useGridSelector(apiRef, gridVisibleColumnFieldsSelector);\n  const [scrollbarSize, setScrollbarSize] = React.useState(0);\n  const handleContentSizeChange = React.useCallback(() => {\n    var _apiRef$current$windo;\n\n    if (!((_apiRef$current$windo = apiRef.current.windowRef) != null && _apiRef$current$windo.current)) {\n      return;\n    } // TODO expose scrollbar size on getRootDimensions\n\n\n    const newScrollbarSize = apiRef.current.windowRef.current.offsetWidth - apiRef.current.windowRef.current.clientWidth;\n    setScrollbarSize(newScrollbarSize);\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, GridEvents.virtualScrollerContentSizeChange, handleContentSizeChange);\n  const pinnedColumns = useGridSelector(apiRef, gridPinnedColumnsSelector);\n  const [leftPinnedColumns, rightPinnedColumns] = filterColumns(pinnedColumns, visibleColumnFields);\n  const {\n    isDragging,\n    renderContext,\n    updateInnerPosition,\n    getRootProps,\n    getInnerProps,\n    getColumns\n  } = useGridColumnHeaders({\n    innerRef,\n    minColumnIndex: leftPinnedColumns.length\n  });\n  const ownerState = {\n    leftPinnedColumns,\n    rightPinnedColumns,\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  React.useEffect(() => {\n    if (renderContext) {\n      updateInnerPosition(renderContext);\n    }\n  }, [renderContext, updateInnerPosition]);\n  const leftRenderContext = renderContext && leftPinnedColumns.length ? _extends({}, renderContext, {\n    firstColumnIndex: 0,\n    lastColumnIndex: leftPinnedColumns.length\n  }) : null;\n  const rightRenderContext = renderContext && rightPinnedColumns.length ? _extends({}, renderContext, {\n    firstColumnIndex: visibleColumnFields.length - rightPinnedColumns.length,\n    lastColumnIndex: visibleColumnFields.length\n  }) : null;\n  return /*#__PURE__*/_jsxs(GridColumnHeaders, _extends({\n    ref: ref,\n    className: className\n  }, getRootProps(other), {\n    children: [leftRenderContext && /*#__PURE__*/_jsx(GridColumnHeadersPinnedColumnHeaders, {\n      className: classes.leftPinnedColumns,\n      ownerState: {\n        side: GridPinnedPosition.left\n      },\n      children: getColumns({\n        renderContext: leftRenderContext,\n        minFirstColumn: leftRenderContext.firstColumnIndex,\n        maxLastColumn: leftRenderContext.lastColumnIndex\n      }, {\n        disableReorder: true\n      })\n    }), /*#__PURE__*/_jsx(GridColumnHeadersInner, _extends({\n      isDragging: isDragging\n    }, getInnerProps(), {\n      children: getColumns({\n        renderContext,\n        minFirstColumn: leftPinnedColumns.length,\n        maxLastColumn: visibleColumnFields.length - rightPinnedColumns.length\n      })\n    })), rightRenderContext && /*#__PURE__*/_jsx(GridColumnHeadersPinnedColumnHeaders, {\n      ownerState: {\n        side: GridPinnedPosition.right\n      },\n      className: classes.rightPinnedColumns,\n      style: {\n        paddingRight: scrollbarSize\n      },\n      children: getColumns({\n        renderContext: rightRenderContext,\n        minFirstColumn: rightRenderContext.firstColumnIndex,\n        maxLastColumn: rightRenderContext.lastColumnIndex\n      }, {\n        disableReorder: true,\n        separatorSide: GridColumnHeaderSeparatorSides.Left\n      })\n    })]\n  }));\n});","map":{"version":3,"sources":["C:/Users/Admin/Documents/KRS/Application1/client/node_modules/@mui/x-data-grid-pro/components/DataGridProColumnHeaders.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","unstable_composeClasses","composeClasses","styled","alpha","getDataGridUtilityClass","gridClasses","useGridSelector","useGridApiEventHandler","gridVisibleColumnFieldsSelector","GridEvents","GridColumnHeaderSeparatorSides","GridColumnHeaders","GridColumnHeadersInner","useGridColumnHeaders","useGridRootProps","useGridApiContext","gridPinnedColumnsSelector","GridPinnedPosition","filterColumns","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","leftPinnedColumns","rightPinnedColumns","classes","slots","length","getOverlayAlpha","elevation","alphaValue","Math","log","GridColumnHeadersPinnedColumnHeaders","name","slot","overridesResolver","props","styles","pinnedColumnHeaders","theme","position","overflow","height","zIndex","display","boxShadow","shadows","backgroundColor","palette","background","default","mode","backgroundImage","side","left","right","DataGridProColumnHeaders","forwardRef","ref","className","innerRef","other","rootProps","apiRef","visibleColumnFields","scrollbarSize","setScrollbarSize","useState","handleContentSizeChange","useCallback","_apiRef$current$windo","current","windowRef","newScrollbarSize","offsetWidth","clientWidth","virtualScrollerContentSizeChange","pinnedColumns","isDragging","renderContext","updateInnerPosition","getRootProps","getInnerProps","getColumns","minColumnIndex","useEffect","leftRenderContext","firstColumnIndex","lastColumnIndex","rightRenderContext","children","minFirstColumn","maxLastColumn","disableReorder","style","paddingRight","separatorSide","Left"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"style\", \"className\", \"innerRef\"];\nimport * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled, alpha } from '@mui/material/styles';\nimport { getDataGridUtilityClass, gridClasses, useGridSelector, useGridApiEventHandler, gridVisibleColumnFieldsSelector, GridEvents, GridColumnHeaderSeparatorSides } from '@mui/x-data-grid';\nimport { GridColumnHeaders, GridColumnHeadersInner, useGridColumnHeaders } from '@mui/x-data-grid/internals';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { gridPinnedColumnsSelector, GridPinnedPosition } from '../hooks/features/columnPinning';\nimport { filterColumns } from './DataGridProVirtualScroller';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    leftPinnedColumns,\n    rightPinnedColumns,\n    classes\n  } = ownerState;\n  const slots = {\n    leftPinnedColumns: ['pinnedColumnHeaders', leftPinnedColumns && leftPinnedColumns.length > 0 && `pinnedColumnHeaders--left`],\n    rightPinnedColumns: ['pinnedColumnHeaders', rightPinnedColumns && rightPinnedColumns.length > 0 && `pinnedColumnHeaders--right`]\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\n// Inspired by https://github.com/material-components/material-components-ios/blob/bca36107405594d5b7b16265a5b0ed698f85a5ee/components/Elevation/src/UIColor%2BMaterialElevation.m#L61\nconst getOverlayAlpha = elevation => {\n  let alphaValue;\n\n  if (elevation < 1) {\n    alphaValue = 5.11916 * elevation ** 2;\n  } else {\n    alphaValue = 4.5 * Math.log(elevation + 1) + 2;\n  }\n\n  return alphaValue / 100;\n};\n\nconst GridColumnHeadersPinnedColumnHeaders = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PinnedColumnHeaders',\n  overridesResolver: (props, styles) => [{\n    [`&.${gridClasses['pinnedColumnHeaders--left']}`]: styles['pinnedColumnHeaders--left']\n  }, {\n    [`&.${gridClasses['pinnedColumnHeaders--right']}`]: styles['pinnedColumnHeaders--right']\n  }, styles.pinnedColumnHeaders]\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  position: 'absolute',\n  overflow: 'hidden',\n  height: '100%',\n  zIndex: 1,\n  display: 'flex',\n  boxShadow: theme.shadows[2],\n  backgroundColor: theme.palette.background.default\n}, theme.palette.mode === 'dark' && {\n  backgroundImage: `linear-gradient(${alpha('#fff', getOverlayAlpha(2))}, ${alpha('#fff', getOverlayAlpha(2))})`\n}, ownerState.side === GridPinnedPosition.left && {\n  left: 0\n}, ownerState.side === GridPinnedPosition.right && {\n  right: 0\n}));\nexport const DataGridProColumnHeaders = /*#__PURE__*/React.forwardRef(function DataGridProColumnHeaders(props, ref) {\n  const {\n    className,\n    innerRef\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const apiRef = useGridApiContext();\n  const visibleColumnFields = useGridSelector(apiRef, gridVisibleColumnFieldsSelector);\n  const [scrollbarSize, setScrollbarSize] = React.useState(0);\n  const handleContentSizeChange = React.useCallback(() => {\n    var _apiRef$current$windo;\n\n    if (!((_apiRef$current$windo = apiRef.current.windowRef) != null && _apiRef$current$windo.current)) {\n      return;\n    } // TODO expose scrollbar size on getRootDimensions\n\n\n    const newScrollbarSize = apiRef.current.windowRef.current.offsetWidth - apiRef.current.windowRef.current.clientWidth;\n    setScrollbarSize(newScrollbarSize);\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, GridEvents.virtualScrollerContentSizeChange, handleContentSizeChange);\n  const pinnedColumns = useGridSelector(apiRef, gridPinnedColumnsSelector);\n  const [leftPinnedColumns, rightPinnedColumns] = filterColumns(pinnedColumns, visibleColumnFields);\n  const {\n    isDragging,\n    renderContext,\n    updateInnerPosition,\n    getRootProps,\n    getInnerProps,\n    getColumns\n  } = useGridColumnHeaders({\n    innerRef,\n    minColumnIndex: leftPinnedColumns.length\n  });\n  const ownerState = {\n    leftPinnedColumns,\n    rightPinnedColumns,\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  React.useEffect(() => {\n    if (renderContext) {\n      updateInnerPosition(renderContext);\n    }\n  }, [renderContext, updateInnerPosition]);\n  const leftRenderContext = renderContext && leftPinnedColumns.length ? _extends({}, renderContext, {\n    firstColumnIndex: 0,\n    lastColumnIndex: leftPinnedColumns.length\n  }) : null;\n  const rightRenderContext = renderContext && rightPinnedColumns.length ? _extends({}, renderContext, {\n    firstColumnIndex: visibleColumnFields.length - rightPinnedColumns.length,\n    lastColumnIndex: visibleColumnFields.length\n  }) : null;\n  return /*#__PURE__*/_jsxs(GridColumnHeaders, _extends({\n    ref: ref,\n    className: className\n  }, getRootProps(other), {\n    children: [leftRenderContext && /*#__PURE__*/_jsx(GridColumnHeadersPinnedColumnHeaders, {\n      className: classes.leftPinnedColumns,\n      ownerState: {\n        side: GridPinnedPosition.left\n      },\n      children: getColumns({\n        renderContext: leftRenderContext,\n        minFirstColumn: leftRenderContext.firstColumnIndex,\n        maxLastColumn: leftRenderContext.lastColumnIndex\n      }, {\n        disableReorder: true\n      })\n    }), /*#__PURE__*/_jsx(GridColumnHeadersInner, _extends({\n      isDragging: isDragging\n    }, getInnerProps(), {\n      children: getColumns({\n        renderContext,\n        minFirstColumn: leftPinnedColumns.length,\n        maxLastColumn: visibleColumnFields.length - rightPinnedColumns.length\n      })\n    })), rightRenderContext && /*#__PURE__*/_jsx(GridColumnHeadersPinnedColumnHeaders, {\n      ownerState: {\n        side: GridPinnedPosition.right\n      },\n      className: classes.rightPinnedColumns,\n      style: {\n        paddingRight: scrollbarSize\n      },\n      children: getColumns({\n        renderContext: rightRenderContext,\n        minFirstColumn: rightRenderContext.firstColumnIndex,\n        maxLastColumn: rightRenderContext.lastColumnIndex\n      }, {\n        disableReorder: true,\n        separatorSide: GridColumnHeaderSeparatorSides.Left\n      })\n    })]\n  }));\n});"]},"metadata":{},"sourceType":"module"}