{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { useGridApiEventHandler, getDataGridUtilityClass, GridEvents, useGridLogger } from '@mui/x-data-grid';\nimport { gridColumnReorderDragColSelector } from './columnReorderSelector';\nconst CURSOR_MOVE_DIRECTION_LEFT = 'left';\nconst CURSOR_MOVE_DIRECTION_RIGHT = 'right';\n\nconst getCursorMoveDirectionX = (currentCoordinates, nextCoordinates) => {\n  return currentCoordinates.x <= nextCoordinates.x ? CURSOR_MOVE_DIRECTION_RIGHT : CURSOR_MOVE_DIRECTION_LEFT;\n};\n\nconst hasCursorPositionChanged = (currentCoordinates, nextCoordinates) => currentCoordinates.x !== nextCoordinates.x || currentCoordinates.y !== nextCoordinates.y;\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    columnHeaderDragging: ['columnHeader--dragging']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nexport const columnReorderStateInitializer = state => _extends({}, state, {\n  columnReorder: {\n    dragCol: ''\n  }\n});\n/**\n * Only available in DataGridPro\n * @requires useGridColumns (method)\n */\n\nexport const useGridColumnReorder = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridColumnReorder');\n  const dragColNode = React.useRef(null);\n  const cursorPosition = React.useRef({\n    x: 0,\n    y: 0\n  });\n  const originColumnIndex = React.useRef(null);\n  const removeDnDStylesTimeout = React.useRef();\n  const ownerState = {\n    classes: props.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(removeDnDStylesTimeout.current);\n    };\n  }, []);\n  const handleColumnHeaderDragStart = React.useCallback((params, event) => {\n    if (props.disableColumnReorder || params.colDef.disableReorder) {\n      return;\n    }\n\n    logger.debug(`Start dragging col ${params.field}`); // Prevent drag events propagation.\n    // For more information check here https://github.com/mui/mui-x/issues/2680.\n\n    event.stopPropagation();\n    dragColNode.current = event.currentTarget;\n    dragColNode.current.classList.add(classes.columnHeaderDragging);\n    apiRef.current.setState(state => _extends({}, state, {\n      columnReorder: _extends({}, state.columnReorder, {\n        dragCol: params.field\n      })\n    }));\n    apiRef.current.forceUpdate();\n    removeDnDStylesTimeout.current = setTimeout(() => {\n      dragColNode.current.classList.remove(classes.columnHeaderDragging);\n    });\n    originColumnIndex.current = apiRef.current.getColumnIndex(params.field, false);\n  }, [props.disableColumnReorder, classes.columnHeaderDragging, logger, apiRef]);\n  const handleDragEnter = React.useCallback((params, event) => {\n    event.preventDefault(); // Prevent drag events propagation.\n    // For more information check here https://github.com/mui/mui-x/issues/2680.\n\n    event.stopPropagation();\n  }, []);\n  const handleDragOver = React.useCallback((params, event) => {\n    const dragColField = gridColumnReorderDragColSelector(apiRef);\n\n    if (!dragColField) {\n      return;\n    }\n\n    logger.debug(`Dragging over col ${params.field}`);\n    event.preventDefault(); // Prevent drag events propagation.\n    // For more information check here https://github.com/mui/mui-x/issues/2680.\n\n    event.stopPropagation();\n    const coordinates = {\n      x: event.clientX,\n      y: event.clientY\n    };\n\n    if (params.field !== dragColField && hasCursorPositionChanged(cursorPosition.current, coordinates)) {\n      const targetColIndex = apiRef.current.getColumnIndex(params.field, false);\n      const targetColVisibleIndex = apiRef.current.getColumnIndex(params.field, true);\n      const targetCol = apiRef.current.getColumn(params.field);\n      const dragColIndex = apiRef.current.getColumnIndex(dragColField, false);\n      const visibleColumns = apiRef.current.getVisibleColumns();\n      const cursorMoveDirectionX = getCursorMoveDirectionX(cursorPosition.current, coordinates);\n      const hasMovedLeft = cursorMoveDirectionX === CURSOR_MOVE_DIRECTION_LEFT && targetColIndex < dragColIndex;\n      const hasMovedRight = cursorMoveDirectionX === CURSOR_MOVE_DIRECTION_RIGHT && dragColIndex < targetColIndex;\n\n      if (hasMovedLeft || hasMovedRight) {\n        let canBeReordered;\n\n        if (!targetCol.disableReorder) {\n          canBeReordered = true;\n        } else if (hasMovedLeft) {\n          canBeReordered = targetColIndex > 0 && !visibleColumns[targetColIndex - 1].disableReorder;\n        } else {\n          canBeReordered = targetColIndex < visibleColumns.length - 1 && !visibleColumns[targetColIndex + 1].disableReorder;\n        }\n\n        const canBeReorderedProcessed = apiRef.current.unstable_applyPreProcessors('canBeReordered', canBeReordered, {\n          targetIndex: targetColVisibleIndex\n        });\n\n        if (canBeReorderedProcessed) {\n          apiRef.current.setColumnIndex(dragColField, targetColIndex);\n        }\n      }\n\n      cursorPosition.current = coordinates;\n    }\n  }, [apiRef, logger]);\n  const handleDragEnd = React.useCallback((params, event) => {\n    const dragColField = gridColumnReorderDragColSelector(apiRef);\n\n    if (props.disableColumnReorder || !dragColField) {\n      return;\n    }\n\n    logger.debug('End dragging col');\n    event.preventDefault(); // Prevent drag events propagation.\n    // For more information check here https://github.com/mui/mui-x/issues/2680.\n\n    event.stopPropagation();\n    clearTimeout(removeDnDStylesTimeout.current);\n    dragColNode.current = null; // Check if the column was dropped outside the grid.\n\n    if (event.dataTransfer.dropEffect === 'none') {\n      // Accessing params.field may contain the wrong field as header elements are reused\n      apiRef.current.setColumnIndex(dragColField, originColumnIndex.current);\n      originColumnIndex.current = null;\n    }\n\n    apiRef.current.setState(state => _extends({}, state, {\n      columnReorder: _extends({}, state.columnReorder, {\n        dragCol: ''\n      })\n    }));\n    apiRef.current.forceUpdate();\n  }, [props.disableColumnReorder, logger, apiRef]);\n  useGridApiEventHandler(apiRef, GridEvents.columnHeaderDragStart, handleColumnHeaderDragStart);\n  useGridApiEventHandler(apiRef, GridEvents.columnHeaderDragEnter, handleDragEnter);\n  useGridApiEventHandler(apiRef, GridEvents.columnHeaderDragOver, handleDragOver);\n  useGridApiEventHandler(apiRef, GridEvents.columnHeaderDragEnd, handleDragEnd);\n  useGridApiEventHandler(apiRef, GridEvents.cellDragEnter, handleDragEnter);\n  useGridApiEventHandler(apiRef, GridEvents.cellDragOver, handleDragOver);\n};","map":{"version":3,"sources":["C:/Users/Admin/Documents/KRS/Application1/client/node_modules/@mui/x-data-grid-pro/hooks/features/columnReorder/useGridColumnReorder.js"],"names":["_extends","React","unstable_composeClasses","composeClasses","useGridApiEventHandler","getDataGridUtilityClass","GridEvents","useGridLogger","gridColumnReorderDragColSelector","CURSOR_MOVE_DIRECTION_LEFT","CURSOR_MOVE_DIRECTION_RIGHT","getCursorMoveDirectionX","currentCoordinates","nextCoordinates","x","hasCursorPositionChanged","y","useUtilityClasses","ownerState","classes","slots","columnHeaderDragging","columnReorderStateInitializer","state","columnReorder","dragCol","useGridColumnReorder","apiRef","props","logger","dragColNode","useRef","cursorPosition","originColumnIndex","removeDnDStylesTimeout","useEffect","clearTimeout","current","handleColumnHeaderDragStart","useCallback","params","event","disableColumnReorder","colDef","disableReorder","debug","field","stopPropagation","currentTarget","classList","add","setState","forceUpdate","setTimeout","remove","getColumnIndex","handleDragEnter","preventDefault","handleDragOver","dragColField","coordinates","clientX","clientY","targetColIndex","targetColVisibleIndex","targetCol","getColumn","dragColIndex","visibleColumns","getVisibleColumns","cursorMoveDirectionX","hasMovedLeft","hasMovedRight","canBeReordered","length","canBeReorderedProcessed","unstable_applyPreProcessors","targetIndex","setColumnIndex","handleDragEnd","dataTransfer","dropEffect","columnHeaderDragStart","columnHeaderDragEnter","columnHeaderDragOver","columnHeaderDragEnd","cellDragEnter","cellDragOver"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { useGridApiEventHandler, getDataGridUtilityClass, GridEvents, useGridLogger } from '@mui/x-data-grid';\nimport { gridColumnReorderDragColSelector } from './columnReorderSelector';\nconst CURSOR_MOVE_DIRECTION_LEFT = 'left';\nconst CURSOR_MOVE_DIRECTION_RIGHT = 'right';\n\nconst getCursorMoveDirectionX = (currentCoordinates, nextCoordinates) => {\n  return currentCoordinates.x <= nextCoordinates.x ? CURSOR_MOVE_DIRECTION_RIGHT : CURSOR_MOVE_DIRECTION_LEFT;\n};\n\nconst hasCursorPositionChanged = (currentCoordinates, nextCoordinates) => currentCoordinates.x !== nextCoordinates.x || currentCoordinates.y !== nextCoordinates.y;\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    columnHeaderDragging: ['columnHeader--dragging']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nexport const columnReorderStateInitializer = state => _extends({}, state, {\n  columnReorder: {\n    dragCol: ''\n  }\n});\n/**\n * Only available in DataGridPro\n * @requires useGridColumns (method)\n */\n\nexport const useGridColumnReorder = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridColumnReorder');\n  const dragColNode = React.useRef(null);\n  const cursorPosition = React.useRef({\n    x: 0,\n    y: 0\n  });\n  const originColumnIndex = React.useRef(null);\n  const removeDnDStylesTimeout = React.useRef();\n  const ownerState = {\n    classes: props.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(removeDnDStylesTimeout.current);\n    };\n  }, []);\n  const handleColumnHeaderDragStart = React.useCallback((params, event) => {\n    if (props.disableColumnReorder || params.colDef.disableReorder) {\n      return;\n    }\n\n    logger.debug(`Start dragging col ${params.field}`); // Prevent drag events propagation.\n    // For more information check here https://github.com/mui/mui-x/issues/2680.\n\n    event.stopPropagation();\n    dragColNode.current = event.currentTarget;\n    dragColNode.current.classList.add(classes.columnHeaderDragging);\n    apiRef.current.setState(state => _extends({}, state, {\n      columnReorder: _extends({}, state.columnReorder, {\n        dragCol: params.field\n      })\n    }));\n    apiRef.current.forceUpdate();\n    removeDnDStylesTimeout.current = setTimeout(() => {\n      dragColNode.current.classList.remove(classes.columnHeaderDragging);\n    });\n    originColumnIndex.current = apiRef.current.getColumnIndex(params.field, false);\n  }, [props.disableColumnReorder, classes.columnHeaderDragging, logger, apiRef]);\n  const handleDragEnter = React.useCallback((params, event) => {\n    event.preventDefault(); // Prevent drag events propagation.\n    // For more information check here https://github.com/mui/mui-x/issues/2680.\n\n    event.stopPropagation();\n  }, []);\n  const handleDragOver = React.useCallback((params, event) => {\n    const dragColField = gridColumnReorderDragColSelector(apiRef);\n\n    if (!dragColField) {\n      return;\n    }\n\n    logger.debug(`Dragging over col ${params.field}`);\n    event.preventDefault(); // Prevent drag events propagation.\n    // For more information check here https://github.com/mui/mui-x/issues/2680.\n\n    event.stopPropagation();\n    const coordinates = {\n      x: event.clientX,\n      y: event.clientY\n    };\n\n    if (params.field !== dragColField && hasCursorPositionChanged(cursorPosition.current, coordinates)) {\n      const targetColIndex = apiRef.current.getColumnIndex(params.field, false);\n      const targetColVisibleIndex = apiRef.current.getColumnIndex(params.field, true);\n      const targetCol = apiRef.current.getColumn(params.field);\n      const dragColIndex = apiRef.current.getColumnIndex(dragColField, false);\n      const visibleColumns = apiRef.current.getVisibleColumns();\n      const cursorMoveDirectionX = getCursorMoveDirectionX(cursorPosition.current, coordinates);\n      const hasMovedLeft = cursorMoveDirectionX === CURSOR_MOVE_DIRECTION_LEFT && targetColIndex < dragColIndex;\n      const hasMovedRight = cursorMoveDirectionX === CURSOR_MOVE_DIRECTION_RIGHT && dragColIndex < targetColIndex;\n\n      if (hasMovedLeft || hasMovedRight) {\n        let canBeReordered;\n\n        if (!targetCol.disableReorder) {\n          canBeReordered = true;\n        } else if (hasMovedLeft) {\n          canBeReordered = targetColIndex > 0 && !visibleColumns[targetColIndex - 1].disableReorder;\n        } else {\n          canBeReordered = targetColIndex < visibleColumns.length - 1 && !visibleColumns[targetColIndex + 1].disableReorder;\n        }\n\n        const canBeReorderedProcessed = apiRef.current.unstable_applyPreProcessors('canBeReordered', canBeReordered, {\n          targetIndex: targetColVisibleIndex\n        });\n\n        if (canBeReorderedProcessed) {\n          apiRef.current.setColumnIndex(dragColField, targetColIndex);\n        }\n      }\n\n      cursorPosition.current = coordinates;\n    }\n  }, [apiRef, logger]);\n  const handleDragEnd = React.useCallback((params, event) => {\n    const dragColField = gridColumnReorderDragColSelector(apiRef);\n\n    if (props.disableColumnReorder || !dragColField) {\n      return;\n    }\n\n    logger.debug('End dragging col');\n    event.preventDefault(); // Prevent drag events propagation.\n    // For more information check here https://github.com/mui/mui-x/issues/2680.\n\n    event.stopPropagation();\n    clearTimeout(removeDnDStylesTimeout.current);\n    dragColNode.current = null; // Check if the column was dropped outside the grid.\n\n    if (event.dataTransfer.dropEffect === 'none') {\n      // Accessing params.field may contain the wrong field as header elements are reused\n      apiRef.current.setColumnIndex(dragColField, originColumnIndex.current);\n      originColumnIndex.current = null;\n    }\n\n    apiRef.current.setState(state => _extends({}, state, {\n      columnReorder: _extends({}, state.columnReorder, {\n        dragCol: ''\n      })\n    }));\n    apiRef.current.forceUpdate();\n  }, [props.disableColumnReorder, logger, apiRef]);\n  useGridApiEventHandler(apiRef, GridEvents.columnHeaderDragStart, handleColumnHeaderDragStart);\n  useGridApiEventHandler(apiRef, GridEvents.columnHeaderDragEnter, handleDragEnter);\n  useGridApiEventHandler(apiRef, GridEvents.columnHeaderDragOver, handleDragOver);\n  useGridApiEventHandler(apiRef, GridEvents.columnHeaderDragEnd, handleDragEnd);\n  useGridApiEventHandler(apiRef, GridEvents.cellDragEnter, handleDragEnter);\n  useGridApiEventHandler(apiRef, GridEvents.cellDragOver, handleDragOver);\n};"]},"metadata":{},"sourceType":"module"}