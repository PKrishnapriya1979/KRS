{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\KRS\\\\Application1\\\\client\\\\src\\\\components\\\\MRHome.js\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport './style.css';\nimport { DataGrid } from '@material-ui/data-grid';\nimport React from 'react';\nimport axios from 'axios'; //var task_acc = [];\n\n/*const data = {\r\n  temp_record : [],\r\n  \r\n  total_task_assigned:[],\r\n  total_task_completed:[],\r\n  dataset : []\r\n        /*{'Inst_id':0,\r\n        'Inst_name':\"\",\r\n        'count_faculty':0,\r\n        'task_assign':\"\",\r\n        'task_overdue':\"\"}\r\n    ]*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Mrhome extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      task_acc: []\n    };\n\n    this.getdata = () => {\n      axios.post('http://localhost:3001/total_faculty').then(response => {\n        // console.log(response.data);\n        //task_acc = response.data;\n        this.setState({\n          task_acc: response.data\n        }); //console.log(this.state.task_acc)\n\n        axios.post(\"http://localhost:3001/total_task_assigned\").then(response => {\n          this.setState({\n            total_task_assigned: response.data\n          }); //console.log(this.state.total_task_assigned);       \n\n          axios.post(\"http://localhost:3001/total_task_completed\").then(response => {\n            //console.log(response.data);\n            this.setState({\n              total_task_completed: response.data\n            });\n            console.log(this.state.task_acc);\n            axios.post(\"http://localhost:3001/total_task_overdue\").then(response => {\n              this.setState({\n                total_task_overdue: response.data\n              });\n            });\n          });\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getdata();\n  }\n\n  /*\r\n       \r\n   \r\n  */\n\n  /*this.Report_data();\r\n  }\r\n  Report_data=()=>{\r\n  console.log(\"Inside Report\");\r\n  console.log(task_acc);\r\n  }*/\n\n  /* for(const i of this.state.task_acc)\r\n     {\r\n         console.log(\"Inside for loop\");*/\n\n  /*console.log(this.state.task_acc.inst_id);\r\n  this.setState({temp_record:this.state.task_acc[i].inst_id});\r\n  console.log(this.temp_record);}.*/\n\n  /*for (let i = 0; i<=this.state.total_task_assigned.length;i++){\r\n        this.temp_record.Inst_id = this.state.total_task_assigned[i].inst_id;\r\n        this.temp_record.Inst_name = this.state.total_task_assigned[i].inst_name;\r\n        this.temp_record.count_faculty = this.state.total_task_assigned[i][2];\r\n        for(let j = 0; j<=this.state.total_task_completed.length;j++){\r\n            if(this.state.total_task_assigned[i].inst_id ==this.state.total_task_completed[j].inst_id)\r\n            this.temp_record.task_assign =  this.state.total_task_completed[j][2]\r\n        }\r\n        for(let j = 0; j<=this.state.total_task_overdue.length;j++){\r\n            if(this.state.total_task_assigned[i].inst_id ==this.state.total_task_completed[j].inst_id)\r\n            this.temp_record.task_overdue =  this.state.total_task_completed[j][2]\r\n        }\r\n        console.log(this.temp_record)\r\n    }  \r\n    console.log(\"Array construction\")\r\n    //this.state.dataset.push(this.state.temp_record);\r\n    console.log(this.state.dataset);*/\n  render() {\n    /*const t_data = this.state.dataset;        \r\n    //console.log(t_data);\r\n    const task_acc_columns = [\r\n      {\r\n        headerName : 'ID',\r\n        field  :'inst_id'\r\n        /*width: 100\r\n      },\r\n      {\r\n        headerName : 'Task Name',\r\n        field  :\"institution\",\r\n        width: 250 \r\n      },\r\n      {\r\n          headerName : \"Members\",\r\n          field:\"count(empid)\",\r\n          width:150\r\n      },\r\n      {\r\n          headerName : \"Task Assigned\",\r\n          field:\"\",\r\n          width:150\r\n      },\r\n      {\r\n          headerName : \"Task Completed\",\r\n          field:\"\",\r\n          width:150\r\n      }  ];\r\n        */\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        height: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flexGrow: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Admin/Documents/KRS/Application1/client/src/components/MRHome.js"],"names":["DataGrid","React","axios","Mrhome","Component","state","task_acc","getdata","post","then","response","setState","data","total_task_assigned","total_task_completed","console","log","total_task_overdue","componentDidMount","render","display","height","flexGrow"],"mappings":";AAAA,OAAO,sCAAP;AACA,OAAO,wCAAP;AACA,OAAO,+CAAP;AACA,OAAO,aAAP;AACA,SAAQA,QAAR,QAAwB,wBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,MAAMC,MAAN,SAAqBF,KAAK,CAACG,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAC1CC,KAD0C,GAClC;AACRC,MAAAA,QAAQ,EAAC;AADD,KADkC;;AAAA,SAO1CC,OAP0C,GAOlC,MACN;AACIL,MAAAA,KAAK,CAACM,IAAN,CAAW,qCAAX,EAAkDC,IAAlD,CAAwDC,QAAD,IAAY;AACjE;AACA;AACA,aAAKC,QAAL,CAAc;AAACL,UAAAA,QAAQ,EAACI,QAAQ,CAACE;AAAnB,SAAd,EAHiE,CAIjE;;AACAV,QAAAA,KAAK,CAACM,IAAN,CAAW,2CAAX,EAAwDC,IAAxD,CAA8DC,QAAD,IAAY;AACzE,eAAKC,QAAL,CAAc;AAACE,YAAAA,mBAAmB,EAACH,QAAQ,CAACE;AAA9B,WAAd,EADyE,CAEzE;;AACAV,UAAAA,KAAK,CAACM,IAAN,CAAW,4CAAX,EAAyDC,IAAzD,CAA+DC,QAAD,IAAY;AAC1E;AACA,iBAAKC,QAAL,CAAc;AAACG,cAAAA,oBAAoB,EAACJ,QAAQ,CAACE;AAA/B,aAAd;AAEAG,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWC,QAAvB;AACAJ,YAAAA,KAAK,CAACM,IAAN,CAAW,0CAAX,EAAuDC,IAAvD,CAA6DC,QAAD,IAAY;AAExE,mBAAKC,QAAL,CAAc;AAACM,gBAAAA,kBAAkB,EAAGP,QAAQ,CAACE;AAA/B,eAAd;AAED,aAJC;AAIG,WATH;AASO,SAZP;AAYW,OAjBb;AAmBH,KA5BuC;AAAA;;AAI1CM,EAAAA,iBAAiB,GAAE;AACjB,SAAKX,OAAL;AACD;;AAuBK;AACR;AACA;AACA;;AAEQ;AACR;AACA;AACA;AACA;AACA;;AACO;AACP;AACA;;AACc;AACd;AACA;;AAEM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEIY,EAAAA,MAAM,GACN;AACE;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI,wBACI;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,MAAM,EAAE;AAA3B,OAAZ;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEI;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAE;AAAZ;AAAZ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAYD;;AA5GyC","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport './style.css';\r\nimport {DataGrid } from '@material-ui/data-grid'\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n//var task_acc = [];\r\n/*const data = {\r\n  temp_record : [],\r\n  \r\n  total_task_assigned:[],\r\n  total_task_completed:[],\r\n  dataset : []\r\n        /*{'Inst_id':0,\r\n        'Inst_name':\"\",\r\n        'count_faculty':0,\r\n        'task_assign':\"\",\r\n        'task_overdue':\"\"}\r\n    ]*/\r\n \r\nexport class Mrhome extends React.Component { \r\n  state = {\r\n  task_acc:[]\r\n  }\r\n  componentDidMount(){\r\n    this.getdata();\r\n  }\r\n  getdata=()=>\r\n    {      \r\n        axios.post('http://localhost:3001/total_faculty').then((response)=>{\r\n          // console.log(response.data);\r\n          //task_acc = response.data;\r\n          this.setState({task_acc:response.data});\r\n          //console.log(this.state.task_acc)\r\n          axios.post(\"http://localhost:3001/total_task_assigned\").then((response)=>{\r\n          this.setState({total_task_assigned:response.data});\r\n          //console.log(this.state.total_task_assigned);       \r\n          axios.post(\"http://localhost:3001/total_task_completed\").then((response)=>{\r\n          //console.log(response.data);\r\n          this.setState({total_task_completed:response.data});\r\n          \r\n          console.log(this.state.task_acc);\r\n          axios.post(\"http://localhost:3001/total_task_overdue\").then((response)=>{\r\n          \r\n          this.setState({total_task_overdue : response.data});\r\n          \r\n        }); }); }); });       \r\n        \r\n    }\r\n        /*\r\n             \r\n         \r\n        */\r\n      \r\n        /*this.Report_data();\r\n    }\r\n  Report_data=()=>{\r\n    console.log(\"Inside Report\");\r\n        console.log(task_acc);\r\n      }*/\r\n       /* for(const i of this.state.task_acc)\r\n          {\r\n              console.log(\"Inside for loop\");*/\r\n              /*console.log(this.state.task_acc.inst_id);\r\n              this.setState({temp_record:this.state.task_acc[i].inst_id});\r\n          console.log(this.temp_record);}.*/ \r\n\r\n      /*for (let i = 0; i<=this.state.total_task_assigned.length;i++){\r\n            this.temp_record.Inst_id = this.state.total_task_assigned[i].inst_id;\r\n            this.temp_record.Inst_name = this.state.total_task_assigned[i].inst_name;\r\n            this.temp_record.count_faculty = this.state.total_task_assigned[i][2];\r\n            for(let j = 0; j<=this.state.total_task_completed.length;j++){\r\n                if(this.state.total_task_assigned[i].inst_id ==this.state.total_task_completed[j].inst_id)\r\n                this.temp_record.task_assign =  this.state.total_task_completed[j][2]\r\n            }\r\n            for(let j = 0; j<=this.state.total_task_overdue.length;j++){\r\n                if(this.state.total_task_assigned[i].inst_id ==this.state.total_task_completed[j].inst_id)\r\n                this.temp_record.task_overdue =  this.state.total_task_completed[j][2]\r\n            }\r\n            console.log(this.temp_record)\r\n        }  \r\n        console.log(\"Array construction\")\r\n        //this.state.dataset.push(this.state.temp_record);\r\n        console.log(this.state.dataset);*/\r\n    \r\n    render() \r\n    {\r\n      /*const t_data = this.state.dataset;        \r\n      //console.log(t_data);\r\n      const task_acc_columns = [\r\n        {\r\n          headerName : 'ID',\r\n          field  :'inst_id'\r\n          /*width: 100\r\n        },\r\n        {\r\n          headerName : 'Task Name',\r\n          field  :\"institution\",\r\n          width: 250 \r\n        },\r\n        {\r\n            headerName : \"Members\",\r\n            field:\"count(empid)\",\r\n            width:150\r\n        },\r\n        {\r\n            headerName : \"Task Assigned\",\r\n            field:\"\",\r\n            width:150\r\n        },\r\n        {\r\n            headerName : \"Task Completed\",\r\n            field:\"\",\r\n            width:150\r\n        }  ];\r\n          */\r\n    return(\r\n        <div style={{ display: 'flex', height: '100%' }}>\r\n          <h1>report</h1>\r\n            <div style={{ flexGrow: 1 }}>\r\n            {/*}    <DataGrid id = \"task_display\" \r\n                    getRowId={rows => rows.inst_id}\r\n                    rows = {t_data}\r\n                    columns = {task_acc_columns}\r\n    />*/}\r\n            </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}