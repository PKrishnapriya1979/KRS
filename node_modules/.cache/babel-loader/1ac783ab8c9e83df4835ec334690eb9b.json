{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\KRS\\\\Application1\\\\client\\\\src\\\\components\\\\task_completed.js\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport axios from 'axios';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Taskcompleted extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      task_acc: []\n    };\n\n    this.viewReport = Event => {\n      window.open(Event.target.value, \"_blank\");\n    };\n\n    this.getdata = () => {\n      this.userdata = sessionStorage.getItem('userdata');\n\n      if (sessionStorage.length === 0) {\n        this.empid = '';\n\n        /*#__PURE__*/\n        _jsxDEV(Redirect, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 14\n        }, this);\n      } else {\n        this.userdata = JSON.parse(this.userdata);\n        this.empid = this.userdata.empid;\n        console.log(this.empid);\n      }\n\n      axios.post('http://localhost:3001/taskcompleted', {\n        empid: this.empid\n      }).then(response => {\n        this.setState({\n          loading: false,\n          task_acc: response.data\n        });\n      });\n      axios.post('http://localhost:3001/taskcompleted', {\n        empid: this.empid\n      }).then(response => {\n        this.setState({\n          loading: false,\n          task_acc: response.data\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getdata(); //const {sel_task} = this.props.location.state;\n  }\n\n  //k.pr_id, k.task_name, k.assignee, k.ass_date, t.rep_date, t.rep_outcome, t.rep_url\n  render() {\n    console.log(\"in task completed\");\n    const t_data = this.state.task_acc;\n    console.log(t_data[0]);\n    const task_acc_columns = [{\n      headerName: 'ID',\n      field: 'pr_id',\n      width: 100\n    }, {\n      headerName: 'Task Name',\n      field: 'task_name',\n      width: 250\n    }, {\n      headerName: 'Assigned By',\n      field: 'empname',\n      width: 170\n    }, {\n      headerName: 'Date of Assignement',\n      field: 'ass_date',\n      width: 170\n    }, {\n      headerName: 'Date of Completion',\n      field: 'r_date',\n      width: 170\n    }, {\n      headerName: 'Outcome',\n      field: 'rep_outcome',\n      width: 150\n    }, {\n      headerName: 'Report',\n      field: \"rep_url\",\n      width: 170,\n      renderCell: cellValues => {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          value: t_data[0]['rep_url'],\n          onClick: this.viewReport.bind(this),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"./pdflogo.jpg\",\n            height: \"30px\",\n            width: \"auto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 20\n        }, this);\n      }\n    }];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: 300,\n          width: window.innerWidth\n        },\n        children: /*#__PURE__*/_jsxDEV(DataGrid, {\n          id: \"task_comp\",\n          getRowId: rows => rows.pr_id,\n          rows: t_data,\n          columns: task_acc_columns,\n          pagesize: 3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Admin/Documents/KRS/Application1/client/src/components/task_completed.js"],"names":["React","Link","Redirect","axios","DataGrid","Taskcompleted","Component","state","task_acc","viewReport","Event","window","open","target","value","getdata","userdata","sessionStorage","getItem","length","empid","JSON","parse","console","log","post","then","response","setState","loading","data","componentDidMount","render","t_data","task_acc_columns","headerName","field","width","renderCell","cellValues","bind","height","innerWidth","rows","pr_id"],"mappings":"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","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport React from 'react';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\n\r\nexport class Taskcompleted extends React.Component {\r\n  state = {\r\n    task_acc : [],\r\n  } \r\n\r\n  componentDidMount(){\r\n    this.getdata();\r\n    //const {sel_task} = this.props.location.state;\r\n  }\r\nviewReport=(Event)=>{\r\n    window.open(Event.target.value,\"_blank\");\r\n  }\r\ngetdata=()=>\r\n    {\r\n        this.userdata = sessionStorage.getItem('userdata');\r\n        if (sessionStorage.length === 0 )\r\n           { this.empid = '';\r\n             <Redirect to = '/'></Redirect>}\r\n        else {\r\n           this.userdata = JSON.parse(this.userdata);\r\n           this.empid= this.userdata.empid;\r\n           console.log(this.empid);\r\n          }  \r\n        axios.post('http://localhost:3001/taskcompleted',{empid:this.empid}).then((response)=>{\r\n                this.setState({loading:false,task_acc:response.data});\r\n      });      \r\n      axios.post('http://localhost:3001/taskcompleted',{empid:this.empid}).then((response)=>{\r\n        this.setState({loading:false,task_acc:response.data});\r\n      });    \r\n    }\r\n    \r\n    //k.pr_id, k.task_name, k.assignee, k.ass_date, t.rep_date, t.rep_outcome, t.rep_url\r\n    render() {\r\n\r\n      console.log(\"in task completed\");\r\n      const t_data = this.state.task_acc;\r\n      console.log(t_data[0])\r\n      const task_acc_columns = [\r\n        {\r\n          headerName : 'ID',\r\n          field  :'pr_id',\r\n          width: 100,\r\n        },\r\n        {\r\n          headerName : 'Task Name',\r\n          field  :'task_name',\r\n          width: 250\r\n        },\r\n        {\r\n          headerName : 'Assigned By',\r\n          field :'empname',\r\n          width: 170\r\n        },\r\n        {\r\n          headerName : 'Date of Assignement',\r\n          field :'ass_date',\r\n          width: 170\r\n        },\r\n        {\r\n          headerName : 'Date of Completion',\r\n          field :'r_date',\r\n          width: 170\r\n        },\r\n        {\r\n          headerName : 'Outcome',\r\n          field :'rep_outcome',\r\n          width: 150\r\n        },\r\n        {\r\n          headerName : 'Report',\r\n          field  :\"rep_url\",\r\n          width: 170,\r\n          renderCell:(cellValues)=>{          \r\n            return <button value = {t_data[0]['rep_url']} onClick={this.viewReport.bind(this)}>\r\n              <img src = \"./pdflogo.jpg\" height = '30px' width = \"auto\"/></button>\r\n            \r\n          }\r\n         }      \r\n       ]; \r\n    return(\r\n      <div>\r\n      <div style = {{height:300,width:window.innerWidth}}>\r\n        <DataGrid id = \"task_comp\" \r\n        getRowId={rows => rows.pr_id}\r\n        rows = {t_data}\r\n        columns = {task_acc_columns}\r\n        pagesize = {3}\r\n        />\r\n      </div>\r\n      </div>\r\n    );\r\n  };   \r\n}   \r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}