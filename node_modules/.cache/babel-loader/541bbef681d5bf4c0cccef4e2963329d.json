{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\KRS\\\\Application1\\\\client\\\\src\\\\components\\\\MRHome.js\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport './style.css';\nimport Button from '@mui/material/Button';\nimport React, { location } from 'react';\nimport axios from 'axios';\nimport { DataGrid, gridCheckboxSelectionColDef } from '@material-ui/data-grid';\nimport { Redirect, Link } from 'react-router-dom';\nimport { Report_upload } from './Report_upload';\nimport { Addtask } from './add_task';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Mrhome extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getdata = () => {\n      axios.post('http://localhost:3001/total_faculty').then(response => {\n        console.log(JSON.stringify(response.data));\n        this.setState({\n          loading: false,\n          task_acc: response.data\n        });\n        console.log(this.state.task_acc);\n      });\n      axios.post(\"http://localhost:3001/total_task_assigned\").then(response => {\n        this.setState({\n          total_task_assigned: JSON.stringify(response.data)\n        });\n        console.log(this.state.total_task_assigned);\n      });\n      axios.post(\"http://localhost:3001/total_task_completed\").then(response => {\n        //console.log(response.data);\n        this.setState({\n          total_task_completed: JSON.stringify(response.data)\n        });\n        console.log(this.state.total_task_completed);\n      });\n      axios.post(\"http://localhost:3001/total_task_overdue\").then(response => {\n        //console.log(response.data);\n        this.setState({\n          total_task_overdue: JSON.stringify(response.data)\n        });\n        console.log(this.state.total_task_overdue);\n      });\n\n      for (let i = 0; i <= this.state.total_task_assigned.length; i++) {\n        this.temp_record.Inst_id = this.state.total_task_assigned[i].inst_id;\n        this.temp_record.Inst_name = this.state.total_task_assigned[i].inst_name;\n        this.temp_record.count_faculty = this.state.total_task_assigned[i][2];\n\n        for (let j = 0; j <= this.state.total_task_completed.length; j++) {\n          if (this.state.total_task_assigned[i].inst_id == this.state.total_task_completed[j].inst_id) this.temp_record.task_assign = this.state.total_task_completed[j][2];\n        }\n\n        for (let j = 0; j <= this.state.total_task_overdue.length; j++) {\n          if (this.state.total_task_assigned[i].inst_id == this.state.total_task_completed[j].inst_id) this.temp_record.task_overdue = this.state.total_task_completed[j][2];\n        }\n\n        console.log(this.temp_record);\n      }\n\n      console.log(\"Array construction\");\n      this.state.dataset.push(this.state.temp_record);\n      console.log(this.state.dataset);\n    };\n\n    this.state = {\n      temp_record: [],\n      task_acc: [],\n      total_task_assigned: [],\n      total_task_completed: [],\n      dataset: [{\n        'Inst_id': 0,\n        'Inst_name': \"\",\n        'count_faculty': 0,\n        'task_assign': \"\",\n        'task_overdue': \"\"\n      }]\n    };\n  }\n\n  componentDidMount() {\n    this.getdata();\n  }\n\n  render() {\n    const t_data = this.state.dataset;\n    console.log(t_data);\n    const task_acc_columns = [{\n      headerName: 'ID',\n      field: 'inst_id'\n      /*width: 100*/\n\n    }, {\n      headerName: 'Task Name',\n      field: \"institution\",\n      width: 250\n    }, {\n      headerName: \"Members\",\n      field: \"count(empid)\",\n      width: 150\n    }, {\n      headerName: \"Task Assigned\",\n      field: \"\",\n      width: 150\n    }, {\n      headerName: \"Task Completed\",\n      field: \"\",\n      width: 150\n    }];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        height: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flexGrow: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(DataGrid, {\n          id: \"task_display\",\n          getRowId: rows => rows.inst_id,\n          rows: t_data,\n          columns: task_acc_columns\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Admin/Documents/KRS/Application1/client/src/components/MRHome.js"],"names":["Button","React","location","axios","DataGrid","gridCheckboxSelectionColDef","Redirect","Link","Report_upload","Addtask","Mrhome","Component","constructor","props","getdata","post","then","response","console","log","JSON","stringify","data","setState","loading","task_acc","state","total_task_assigned","total_task_completed","total_task_overdue","i","length","temp_record","Inst_id","inst_id","Inst_name","inst_name","count_faculty","j","task_assign","task_overdue","dataset","push","componentDidMount","render","t_data","task_acc_columns","headerName","field","width","display","height","flexGrow","rows"],"mappings":"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","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport './style.css';\r\nimport Button from '@mui/material/Button';\r\nimport React, {location} from 'react';\r\nimport axios from 'axios';\r\nimport {DataGrid,gridCheckboxSelectionColDef } from '@material-ui/data-grid'\r\nimport { Redirect,Link} from 'react-router-dom';\r\nimport { Report_upload } from './Report_upload';\r\nimport {Addtask} from './add_task'\r\nexport class Mrhome extends React.Component {  \r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      temp_record : [],\r\n      task_acc:[],\r\n      total_task_assigned:[],\r\n      total_task_completed:[],\r\n    dataset : [\r\n        {'Inst_id':0,\r\n        'Inst_name':\"\",\r\n        'count_faculty':0,\r\n        'task_assign':\"\",\r\n        'task_overdue':\"\"}\r\n    ]\r\n      \r\n    }  \r\n   }\r\n  componentDidMount(){\r\n    this.getdata();\r\n  }\r\n  getdata=()=>\r\n    {      \r\n        axios.post('http://localhost:3001/total_faculty').then((response)=>{\r\n               console.log(JSON.stringify(response.data));\r\n                this.setState({loading:false,task_acc:response.data});\r\n                console.log(this.state.task_acc)\r\n                   \r\n        });       \r\n        axios.post(\"http://localhost:3001/total_task_assigned\").then((response)=>{\r\n          this.setState({total_task_assigned:JSON.stringify(response.data)});\r\n          console.log(this.state.total_task_assigned);       \r\n        })        \r\n        axios.post(\"http://localhost:3001/total_task_completed\").then((response)=>{\r\n          //console.log(response.data);\r\n          this.setState({total_task_completed:JSON.stringify(response.data)});\r\n          console.log(this.state.total_task_completed);       \r\n        })  \r\n        axios.post(\"http://localhost:3001/total_task_overdue\").then((response)=>{\r\n          //console.log(response.data);\r\n          this.setState({total_task_overdue : JSON.stringify(response.data)});\r\n          console.log(this.state.total_task_overdue);\r\n        })  \r\n        for (let i = 0; i<=this.state.total_task_assigned.length;i++){\r\n            this.temp_record.Inst_id = this.state.total_task_assigned[i].inst_id;\r\n            this.temp_record.Inst_name = this.state.total_task_assigned[i].inst_name;\r\n            this.temp_record.count_faculty = this.state.total_task_assigned[i][2];\r\n            for(let j = 0; j<=this.state.total_task_completed.length;j++){\r\n                if(this.state.total_task_assigned[i].inst_id ==this.state.total_task_completed[j].inst_id)\r\n                this.temp_record.task_assign =  this.state.total_task_completed[j][2]\r\n            }\r\n            for(let j = 0; j<=this.state.total_task_overdue.length;j++){\r\n                if(this.state.total_task_assigned[i].inst_id ==this.state.total_task_completed[j].inst_id)\r\n                this.temp_record.task_overdue =  this.state.total_task_completed[j][2]\r\n            }\r\n            console.log(this.temp_record)\r\n        }  \r\n        console.log(\"Array construction\")\r\n        this.state.dataset.push(this.state.temp_record);\r\n        console.log(this.state.dataset);\r\n    }\r\n    render() {\r\n      const t_data = this.state.dataset;        \r\n      console.log(t_data);\r\n      const task_acc_columns = [\r\n        {\r\n          headerName : 'ID',\r\n          field  :'inst_id'\r\n          /*width: 100*/\r\n        },\r\n        {\r\n          headerName : 'Task Name',\r\n          field  :\"institution\",\r\n          width: 250 \r\n        },\r\n        {\r\n            headerName : \"Members\",\r\n            field:\"count(empid)\",\r\n            width:150\r\n        },\r\n        {\r\n            headerName : \"Task Assigned\",\r\n            field:\"\",\r\n            width:150\r\n        },\r\n        {\r\n            headerName : \"Task Completed\",\r\n            field:\"\",\r\n            width:150\r\n        }     \r\n       ]; \r\n    return(\r\n        <div style={{ display: 'flex', height: '100%' }}>\r\n          <h1>report</h1>\r\n            <div style={{ flexGrow: 1 }}>\r\n                <DataGrid id = \"task_display\" \r\n                    getRowId={rows => rows.inst_id}\r\n                    rows = {t_data}\r\n                    columns = {task_acc_columns}\r\n                />\r\n            </div>\r\n      </div>\r\n    );\r\n  };   \r\n}  \r\n"]},"metadata":{},"sourceType":"module"}