{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\KRS\\\\Application1\\\\client\\\\src\\\\components\\\\MRHome.js\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport './style.css';\nimport Button from '@mui/material/Button';\nimport React, { location } from 'react';\nimport axios from 'axios';\nimport { DataGrid, gridCheckboxSelectionColDef } from '@material-ui/data-grid';\nimport { Redirect, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class MRHome extends React.Component {\n  render() {\n    const t_data = this.state.task_acc;\n    const task_acc_columns = [{\n      headerName: 'ID',\n      field: 'pr_id'\n      /*width: 100*/\n\n    }, {\n      headerName: 'Task Name',\n      field: \"task_name\",\n      resizable: true,\n\n      /*width: 230,*/\n      renderCell: cellValues => {\n        return /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/SplitTask\",\n          params: {\n            state: cellValues.value\n          },\n          children: cellValues.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this);\n      }\n    }, {\n      headerName: 'Assigned By',\n      field: 'empname'\n      /*width: 160*/\n\n    }, {\n      headerName: 'Assigned Date',\n      field: 'ass_date'\n      /*width: 150*/\n\n    }, {\n      headerName: 'Closing Date',\n      field: 'target_date'\n      /*width: 150*/\n\n    }, {\n      headerName: 'Status',\n      field: 'pr_status'\n      /*width: 150*/\n\n    }, {\n      headerName: 'Upload Report',\n      field: \"ur\",\n      width: 170,\n      renderCell: cellValues => {\n        console.log(this.state.task_acc);\n        return /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/report\",\n          children: \"Upload Report\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 18\n        }, this);\n      }\n    }];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        height: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flexGrow: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(DataGrid, {\n          id: \"task_display\",\n          getRowId: rows => rows.pr_id,\n          rows: t_data,\n          columns: task_acc_columns\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Admin/Documents/KRS/Application1/client/src/components/MRHome.js"],"names":["Button","React","location","axios","DataGrid","gridCheckboxSelectionColDef","Redirect","Link","MRHome","Component","render","t_data","state","task_acc","task_acc_columns","headerName","field","resizable","renderCell","cellValues","value","width","console","log","display","height","flexGrow","rows","pr_id"],"mappings":";AAAA,OAAO,sCAAP;AACA,OAAO,wCAAP;AACA,OAAO,+CAAP;AACA,OAAO,aAAP;AACA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAiBC,2BAAjB,QAAoD,wBAApD;AACA,SAASC,QAAT,EAAkBC,IAAlB,QAA6B,kBAA7B;;AAGA,eAAe,MAAMC,MAAN,SAAqBP,KAAK,CAACQ,SAA3B,CAAoC;AAE/CC,EAAAA,MAAM,GAAG;AACL,UAAMC,MAAM,GAAG,KAAKC,KAAL,CAAWC,QAA1B;AACA,UAAMC,gBAAgB,GAAG,CACvB;AACEC,MAAAA,UAAU,EAAG,IADf;AAEEC,MAAAA,KAAK,EAAG;AACR;;AAHF,KADuB,EAMvB;AACED,MAAAA,UAAU,EAAG,WADf;AAEEC,MAAAA,KAAK,EAAG,WAFV;AAGEC,MAAAA,SAAS,EAAC,IAHZ;;AAIE;AACAC,MAAAA,UAAU,EAAGC,UAAD,IAAgB;AAC1B,4BACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,YAAX;AAAwB,UAAA,MAAM,EAAI;AAACP,YAAAA,KAAK,EAAEO,UAAU,CAACC;AAAnB,WAAlC;AAAA,oBAA8DD,UAAU,CAACC;AAAzE;AAAA;AAAA;AAAA;AAAA,gBADF;AAGD;AATH,KANuB,EAiBvB;AACEL,MAAAA,UAAU,EAAG,aADf;AAEEC,MAAAA,KAAK,EAAE;AAEP;;AAJF,KAjBuB,EAuBvB;AACED,MAAAA,UAAU,EAAG,eADf;AAEEC,MAAAA,KAAK,EAAE;AACP;;AAHF,KAvBuB,EA4BvB;AACED,MAAAA,UAAU,EAAG,cADf;AAEEC,MAAAA,KAAK,EAAE;AACP;;AAHF,KA5BuB,EAiCvB;AACED,MAAAA,UAAU,EAAG,QADf;AAEEC,MAAAA,KAAK,EAAE;AACP;;AAHF,KAjCuB,EAsCvB;AACED,MAAAA,UAAU,EAAG,eADf;AAEEC,MAAAA,KAAK,EAAG,IAFV;AAGEK,MAAAA,KAAK,EAAE,GAHT;AAIEH,MAAAA,UAAU,EAAEC,UAAD,IAAc;AACvBG,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWC,QAAvB;AACA,4BACG,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH;AAEK;AART,KAtCuB,CAAzB;AAiDF,wBACE;AAAK,MAAA,KAAK,EAAI;AAACW,QAAAA,OAAO,EAAE,MAAV;AAAkBC,QAAAA,MAAM,EAAE;AAA1B,OAAd;AAAA,6BACE;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAE;AAAZ,SAAZ;AAAA,+BACA,QAAC,QAAD;AAAU,UAAA,EAAE,EAAG,cAAf;AACA,UAAA,QAAQ,EAAEC,IAAI,IAAIA,IAAI,CAACC,KADvB;AAEA,UAAA,IAAI,EAAIjB,MAFR;AAGA,UAAA,OAAO,EAAIG;AAHX;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AAhE8C","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport './style.css';\r\nimport Button from '@mui/material/Button';\r\nimport React, {location} from 'react';\r\nimport axios from 'axios';\r\nimport {DataGrid,gridCheckboxSelectionColDef } from '@material-ui/data-grid'\r\nimport { Redirect,Link} from 'react-router-dom';\r\n\r\n\r\nexport default class MRHome extends React.Component{\r\n    \r\n    render() {\r\n        const t_data = this.state.task_acc;        \r\n        const task_acc_columns = [\r\n          {\r\n            headerName : 'ID',\r\n            field  :'pr_id'\r\n            /*width: 100*/\r\n          },\r\n          {\r\n            headerName : 'Task Name',\r\n            field  :\"task_name\",\r\n            resizable:true,\r\n            /*width: 230,*/\r\n            renderCell: (cellValues) => {\r\n              return (\r\n                <Link to = \"/SplitTask\" params = {{state: cellValues.value}}>{cellValues.value}</Link>\r\n              );\r\n            }\r\n          },\r\n          {\r\n            headerName : 'Assigned By',\r\n            field :'empname',\r\n            \r\n            /*width: 160*/\r\n          },\r\n          {\r\n            headerName : 'Assigned Date',\r\n            field :'ass_date'\r\n            /*width: 150*/\r\n          },\r\n          {\r\n            headerName : 'Closing Date',\r\n            field :'target_date'\r\n            /*width: 150*/\r\n          },\r\n          {\r\n            headerName : 'Status',\r\n            field :'pr_status',\r\n            /*width: 150*/\r\n          },\r\n          {\r\n            headerName : 'Upload Report',\r\n            field  :\"ur\",\r\n            width: 170,\r\n            renderCell:(cellValues)=>{          \r\n              console.log(this.state.task_acc);\r\n              return (\r\n                 <Link to = '/report'>Upload Report</Link>\r\n                 )}\r\n          }      \r\n         ]; \r\n      return(\r\n        <div style = {{display: 'flex', height: '100%'}}>\r\n          <div style={{ flexGrow: 1 }}>\r\n          <DataGrid id = \"task_display\" \r\n          getRowId={rows => rows.pr_id}\r\n          rows = {t_data}\r\n          columns = {task_acc_columns}\r\n        />\r\n        </div>\r\n        </div>\r\n      );\r\n    };\r\n}"]},"metadata":{},"sourceType":"module"}