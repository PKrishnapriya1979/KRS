{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\KRS\\\\Application1\\\\client\\\\src\\\\components\\\\taskassigned.js\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport axios from 'axios';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Taskassignedby extends React.Component {\n  constructor() {}\n\n  componentDidMount() {\n    this.getdata(); //const {sel_task} = this.props.location.state;\n  }\n\n  //k.pr_id, k.task_name, k.assignee, k.ass_date, t.rep_date, t.rep_outcome, t.rep_url\n  render() {\n    console.log(\"in task completed\");\n    const t_data = this.state.task_acc;\n    console.log(t_data);\n    const task_acc_columns = [{\n      headerName: 'ID',\n      field: 'pr_id',\n      width: 100\n    }, {\n      headerName: 'Task Name',\n      field: 'task_name',\n      width: 250\n    }, {\n      headerName: 'Assigned to',\n      field: 'empname',\n      width: 170\n    }, {\n      headerName: 'Date of Assignement',\n      field: 'ass_date',\n      width: 170\n    }, {\n      headerName: 'Expected completion',\n      field: 'target_date',\n      width: 170\n    }, {\n      headerName: 'Status',\n      field: 'pr_status',\n      width: 170\n    }];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 300,\n        width: window.innerWidth\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        id: \"task_assign\",\n        getRowId: rows => rows.pr_id,\n        rows: t_data,\n        columns: task_acc_columns,\n        pagesize: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Admin/Documents/KRS/Application1/client/src/components/taskassigned.js"],"names":["React","Link","Redirect","axios","DataGrid","Taskassignedby","Component","constructor","componentDidMount","getdata","render","console","log","t_data","state","task_acc","task_acc_columns","headerName","field","width","height","window","innerWidth","rows","pr_id"],"mappings":";AAAA,OAAO,sCAAP;AACA,OAAO,wCAAP;AACA,OAAO,+CAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,EAAcC,QAAd,QAA6B,kBAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,wBAAzB;;AAEA,eAAe,MAAMC,cAAN,SAA6BL,KAAK,CAACM,SAAnC,CAA6C;AAC1DC,EAAAA,WAAW,GAAE,CAEZ;;AAIDC,EAAAA,iBAAiB,GAAE;AACjB,SAAKC,OAAL,GADiB,CAEjB;AACD;;AAiBC;AACAC,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,UAAMC,MAAM,GAAG,KAAKC,KAAL,CAAWC,QAA1B;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AACA,UAAMG,gBAAgB,GAAG,CACvB;AACEC,MAAAA,UAAU,EAAG,IADf;AAEEC,MAAAA,KAAK,EAAG,OAFV;AAGEC,MAAAA,KAAK,EAAE;AAHT,KADuB,EAMvB;AACEF,MAAAA,UAAU,EAAG,WADf;AAEEC,MAAAA,KAAK,EAAG,WAFV;AAGEC,MAAAA,KAAK,EAAE;AAHT,KANuB,EAWvB;AACEF,MAAAA,UAAU,EAAG,aADf;AAEEC,MAAAA,KAAK,EAAE,SAFT;AAGEC,MAAAA,KAAK,EAAE;AAHT,KAXuB,EAgBvB;AACEF,MAAAA,UAAU,EAAG,qBADf;AAEEC,MAAAA,KAAK,EAAE,UAFT;AAGEC,MAAAA,KAAK,EAAE;AAHT,KAhBuB,EAqBvB;AACEF,MAAAA,UAAU,EAAG,qBADf;AAEEC,MAAAA,KAAK,EAAE,aAFT;AAGEC,MAAAA,KAAK,EAAE;AAHT,KArBuB,EA0BvB;AACEF,MAAAA,UAAU,EAAG,QADf;AAEEC,MAAAA,KAAK,EAAG,WAFV;AAGEC,MAAAA,KAAK,EAAE;AAHT,KA1BuB,CAAzB;AAgCF,wBACE;AAAK,MAAA,KAAK,EAAI;AAACC,QAAAA,MAAM,EAAC,GAAR;AAAYD,QAAAA,KAAK,EAACE,MAAM,CAACC;AAAzB,OAAd;AAAA,6BACE,QAAC,QAAD;AAAU,QAAA,EAAE,EAAG,aAAf;AACA,QAAA,QAAQ,EAAEC,IAAI,IAAIA,IAAI,CAACC,KADvB;AAEA,QAAA,IAAI,EAAIX,MAFR;AAGA,QAAA,OAAO,EAAIG,gBAHX;AAIA,QAAA,QAAQ,EAAI;AAJZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AA1EyD","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport React from 'react';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\n\r\nexport default class Taskassignedby extends React.Component {\r\n  constructor(){\r\n    \r\n  }\r\n  state = {\r\n    task_acc : [],\r\n  } \r\n  componentDidMount(){\r\n    this.getdata();\r\n    //const {sel_task} = this.props.location.state;\r\n  }\r\n  getdata=()=>\r\n    {\r\n        this.userdata = sessionStorage.getItem('userdata');\r\n        if (sessionStorage.length === 0 )\r\n           { this.empid = '';\r\n             <Redirect to = '/'></Redirect>}\r\n        else {\r\n           this.userdata = JSON.parse(this.userdata);\r\n           this.empid= this.userdata.empid;\r\n           console.log(this.empid);\r\n          }  \r\n        axios.post('http://localhost:3001/taskassignedbyme',{empid:this.empid}).then((response)=>{\r\n                this.setState({loading:false,task_acc:response.data});\r\n      });             \r\n    }\r\n    \r\n    //k.pr_id, k.task_name, k.assignee, k.ass_date, t.rep_date, t.rep_outcome, t.rep_url\r\n    render() {\r\n      console.log(\"in task completed\");\r\n      const t_data = this.state.task_acc;\r\n      console.log(t_data);        \r\n      const task_acc_columns = [\r\n        {\r\n          headerName : 'ID',\r\n          field  :'pr_id',\r\n          width: 100\r\n        },\r\n        {\r\n          headerName : 'Task Name',\r\n          field  :'task_name',\r\n          width: 250\r\n        },\r\n        {\r\n          headerName : 'Assigned to',\r\n          field :'empname',\r\n          width: 170\r\n        },\r\n        {\r\n          headerName : 'Date of Assignement',\r\n          field :'ass_date',\r\n          width: 170\r\n        },\r\n        {\r\n          headerName : 'Expected completion',\r\n          field :'target_date',\r\n          width: 170\r\n        },\r\n        {\r\n          headerName : 'Status',\r\n          field  :'pr_status',\r\n          width: 170,\r\n         }      \r\n       ]; \r\n    return(\r\n      <div style = {{height:300,width:window.innerWidth}}>\r\n        <DataGrid id = \"task_assign\" \r\n        getRowId={rows => rows.pr_id}\r\n        rows = {t_data}\r\n        columns = {task_acc_columns}\r\n        pagesize = {3}\r\n        />\r\n      </div>\r\n    );\r\n  };   \r\n}   \r\n"]},"metadata":{},"sourceType":"module"}