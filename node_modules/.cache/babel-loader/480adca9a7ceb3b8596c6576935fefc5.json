{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\KRS\\\\Application1\\\\client\\\\src\\\\components\\\\Insttaskassigned.js\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport './style.css';\nimport Progress_bar from './Progressbar';\nimport { DataGrid } from '@material-ui/data-grid';\nimport React from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Task_Institution extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      task_report: []\n    };\n\n    this.getdata = () => {\n      var inst_id = localStorage.getItem(\"Inst_id\");\n      alert(\"institution task assigned\");\n      console.log(\"Institution Id : \" + inst_id);\n      axios.post(\"http://localhost:3001/Inst_task_assigned\", {\n        inst_id: inst_id\n      }).then(response => {\n        console.log(response.data);\n        this.setState({\n          task_report: response.data\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getdata();\n  }\n\n  render() {\n    alert(\"hello\");\n    const t_data = this.state.task_report;\n    const task_acc_columns = [{\n      headerName: 'ID',\n      field: 'pr_id',\n      width: 95\n    }, {\n      headerName: 'Task Name',\n      field: \"task_name\",\n      width: 250,\n      renderCell: cellValues => {\n        return /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/Facultyhome\",\n          children: cellValues.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this);\n      }\n    }, {\n      headerName: \"Assigned to \",\n      field: \"empname\",\n      width: 150\n    }, {\n      headerName: \"Assigned By\",\n      field: \"assigned\",\n      width: 150\n    }, {\n      headerName: \"Status\",\n      field: \"pr_status\",\n      width: 150,\n      renderCell: cellValues => {\n        return /*#__PURE__*/_jsxDEV(Progress_bar, {\n          bgcolor: \"blue\",\n          progress: cellValues.value,\n          height: 15\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 18\n        }, this);\n      }\n    }, {\n      headerName: \"Report\",\n      field: \"\",\n      width: 150\n    }];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        height: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flexGrow: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(DataGrid, {\n          id: \"task_display\",\n          getRowId: rows => rows.pr_id,\n          rows: t_data,\n          columns: task_acc_columns\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Admin/Documents/KRS/Application1/client/src/components/Insttaskassigned.js"],"names":["Progress_bar","DataGrid","React","axios","Link","Task_Institution","Component","state","task_report","getdata","inst_id","localStorage","getItem","alert","console","log","post","then","response","data","setState","componentDidMount","render","t_data","task_acc_columns","headerName","field","width","renderCell","cellValues","value","display","height","flexGrow","rows","pr_id"],"mappings":"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","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport './style.css';\r\nimport Progress_bar from './Progressbar';\r\n\r\nimport {DataGrid } from '@material-ui/data-grid'\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport class Task_Institution extends React.Component { \r\n  state = {  \r\n    task_report:[]    \r\n  }\r\n  componentDidMount(){  \r\n    this.getdata();\r\n  }\r\n  getdata=()=>\r\n    {\r\n      var inst_id = localStorage.getItem(\"Inst_id\");\r\n      alert(\"institution task assigned\");\r\n      console.log(\"Institution Id : \"+ inst_id);\r\n      axios.post(\"http://localhost:3001/Inst_task_assigned\",{inst_id:inst_id}).then((response)=>{\r\n        console.log(response.data)\r\n        this.setState({task_report:response.data});\r\n      }) \r\n    }\r\n    render() \r\n    {\r\n      alert(\"hello\");\r\n      const t_data = this.state.task_report;              \r\n      const task_acc_columns = [\r\n        {\r\n          headerName : 'ID',\r\n          field  :'pr_id',\r\n          width: 95\r\n        },\r\n        {\r\n          headerName : 'Task Name',\r\n          field  :\"task_name\",\r\n          width: 250 ,\r\n          renderCell: (cellValues) => {\r\n            return (\r\n              <Link to = \"/Facultyhome\">{cellValues.value}</Link>\r\n            );\r\n          }\r\n        },\r\n        {\r\n            headerName : \"Assigned to \",\r\n            field:\"empname\",\r\n            width:150\r\n            \r\n        },\r\n        {\r\n            headerName : \"Assigned By\",\r\n            field:\"assigned\",\r\n            width:150,\r\n        },\r\n        {\r\n            headerName : \"Status\",\r\n            field:\"pr_status\",\r\n            width:150,\r\n            renderCell:(cellValues)=>{          \r\n              return (\r\n                 <Progress_bar bgcolor=\"blue\" progress={cellValues.value}  height={15}/>\r\n                 )}\r\n        },\r\n        {\r\n            headerName : \"Report\",\r\n            field:\"\",\r\n            width:150\r\n            \r\n        }  \r\n      ];\r\n    return(\r\n        <div style={{ display: 'flex', height: '100%'}}>\r\n            <div style={{ flexGrow: 1 }}>\r\n                <DataGrid id = \"task_display\" \r\n                    getRowId={rows => rows.pr_id}\r\n                    rows = {t_data}\r\n                    columns = {task_acc_columns}\r\n                  />\r\n            </div>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}