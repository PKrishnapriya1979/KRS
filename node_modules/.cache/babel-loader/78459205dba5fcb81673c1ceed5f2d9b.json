{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\KRS\\\\Application1\\\\client\\\\src\\\\components\\\\MRHome.js\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport './style.css';\nimport Button from '@mui/material/Button';\nimport React, { location } from 'react';\nimport axios from 'axios';\nimport { DataGrid, gridCheckboxSelectionColDef } from '@material-ui/data-grid';\nimport { Redirect, Link } from 'react-router-dom';\nimport { Report_upload } from './Report_upload';\nimport { Addtask } from './add_task';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar dataset = [{\n  'Inst_id': 0,\n  'Inst_name': \"\",\n  'count_faculty': 0,\n  'task_assign': \"\",\n  'task_overdue': \"\"\n}];\nvar temp_record = [];\nexport class Mrhome extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getdata = () => {\n      axios.post('http://localhost:3001/total_faculty').then(response => {\n        this.setState({\n          loading: false,\n          task_acc: response.data\n        });\n        console.log(this.state.task_acc);\n      });\n      axios.post(\"http://localhost:3001/total_task_assigned\").then(response => {\n        this.setState({\n          total_task_assigned: response.data\n        });\n        console.log(this.state.total_task_assigned);\n      });\n      axios.post(\"http://localhost:3001/total_task_completed\").then(response => {\n        //console.log(response.data);\n        this.setState({\n          total_task_completed: response.data\n        });\n      });\n      axios.post(\"http://localhost:3001/total_task_overdue\").then(response => {\n        console.log(response.data);\n        this.setState({\n          total_task_overdue: response.data\n        });\n      });\n\n      for (let i = 0; i <= this.state.total_task_assigned.length; i++) {\n        temp_record[0] = this.state.total_task_assigned[i].inst_id;\n        dataset.inst_name = this.state.total_task_assigned[i].inst_name;\n        dataset.count_faculty = this.state.total_task_assigned[i][2];\n\n        for (let j = 0; j <= this.state.total_task_completed.length; j++) {\n          if (this.state.total_task_assigned[i].inst_id == this.state.total_task_completed[j].inst_id) dataset.task_assign = this.state.total_task_completed[j][2];\n        }\n\n        for (let j = 0; j <= this.state.total_task_overdue.length; j++) {\n          if (this.state.total_task_assigned[i].inst_id == this.state.total_task_completed[j].inst_id) dataset.task_assign = this.state.total_task_completed[j][2];\n        }\n      }\n    };\n\n    this.state = {\n      task_acc: [],\n      total_task_assigned: [],\n      total_task_completed: []\n    };\n  }\n\n  componentDidMount() {\n    this.getdata();\n  }\n\n  render() {\n    const t_data = dataset;\n    console.log(t_data);\n    const task_acc_columns = [{\n      headerName: 'ID',\n      field: 'inst_id'\n      /*width: 100*/\n\n    }, {\n      headerName: 'Task Name',\n      field: \"institution\",\n      width: 250\n    }, {\n      headerName: \"Members\",\n      field: \"count(empid)\",\n      width: 150\n    }, {\n      headerName: \"Task Assigned\",\n      field: \"\",\n      width: 150\n    }, {\n      headerName: \"Task Completed\",\n      field: \"\",\n      width: 150\n    }];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        height: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flexGrow: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(DataGrid, {\n          id: \"task_display\",\n          getRowId: rows => rows.inst_id,\n          rows: t_data,\n          columns: task_acc_columns\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Admin/Documents/KRS/Application1/client/src/components/MRHome.js"],"names":["Button","React","location","axios","DataGrid","gridCheckboxSelectionColDef","Redirect","Link","Report_upload","Addtask","dataset","temp_record","Mrhome","Component","constructor","props","getdata","post","then","response","setState","loading","task_acc","data","console","log","state","total_task_assigned","total_task_completed","total_task_overdue","i","length","inst_id","inst_name","count_faculty","j","task_assign","componentDidMount","render","t_data","task_acc_columns","headerName","field","width","display","height","flexGrow","rows"],"mappings":"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","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport './style.css';\r\nimport Button from '@mui/material/Button';\r\nimport React, {location} from 'react';\r\nimport axios from 'axios';\r\nimport {DataGrid,gridCheckboxSelectionColDef } from '@material-ui/data-grid'\r\nimport { Redirect,Link} from 'react-router-dom';\r\nimport { Report_upload } from './Report_upload';\r\nimport {Addtask} from './add_task'\r\nvar dataset = [\r\n    {'Inst_id':0,\r\n    'Inst_name':\"\",\r\n    'count_faculty':0,\r\n    'task_assign':\"\",\r\n    'task_overdue':\"\"}\r\n]\r\nvar temp_record=[];\r\nexport class Mrhome extends React.Component {  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      task_acc : [],\r\n      total_task_assigned:[],\r\n      total_task_completed:[]\r\n    }  \r\n   }\r\n  componentDidMount(){\r\n    this.getdata();\r\n  }\r\n  getdata=()=>\r\n    {      \r\n        axios.post('http://localhost:3001/total_faculty').then((response)=>{\r\n                this.setState({loading:false,task_acc:response.data});\r\n                   console.log(this.state.task_acc);\r\n        });       \r\n        axios.post(\"http://localhost:3001/total_task_assigned\").then((response)=>{\r\n        \r\n          this.setState({total_task_assigned:response.data});\r\n          console.log(this.state.total_task_assigned);       \r\n        })        \r\n        axios.post(\"http://localhost:3001/total_task_completed\").then((response)=>{\r\n          //console.log(response.data);\r\n          this.setState({total_task_completed:response.data});\r\n        })  \r\n        axios.post(\"http://localhost:3001/total_task_overdue\").then((response)=>{\r\n          console.log(response.data);\r\n          this.setState({total_task_overdue : response.data});\r\n        })  \r\n        for (let i = 0; i<=this.state.total_task_assigned.length;i++){\r\n            temp_record[0] = this.state.total_task_assigned[i].inst_id;\r\n            dataset.inst_name = this.state.total_task_assigned[i].inst_name;\r\n            dataset.count_faculty = this.state.total_task_assigned[i][2];\r\n            for(let j = 0; j<=this.state.total_task_completed.length;j++){\r\n                if(this.state.total_task_assigned[i].inst_id ==this.state.total_task_completed[j].inst_id)\r\n                    dataset.task_assign =  this.state.total_task_completed[j][2]\r\n            }\r\n            for(let j = 0; j<=this.state.total_task_overdue.length;j++){\r\n                if(this.state.total_task_assigned[i].inst_id ==this.state.total_task_completed[j].inst_id)\r\n                    dataset.task_assign =  this.state.total_task_completed[j][2]\r\n            }\r\n        }  \r\n    }\r\n    render() {\r\n      const t_data = dataset;        \r\n      console.log(t_data);\r\n      const task_acc_columns = [\r\n        {\r\n          headerName : 'ID',\r\n          field  :'inst_id'\r\n          /*width: 100*/\r\n        },\r\n        {\r\n          headerName : 'Task Name',\r\n          field  :\"institution\",\r\n          \r\n          width: 250 \r\n        },\r\n        {\r\n            headerName : \"Members\",\r\n            field:\"count(empid)\",\r\n            width:150\r\n        },\r\n        {\r\n            headerName : \"Task Assigned\",\r\n            field:\"\",\r\n            width:150\r\n        },\r\n        {\r\n            headerName : \"Task Completed\",\r\n            field:\"\",\r\n            width:150\r\n        }     \r\n       ]; \r\n    return(\r\n        <div style={{ display: 'flex', height: '100%' }}>\r\n            <div style={{ flexGrow: 1 }}>\r\n                <DataGrid id = \"task_display\" \r\n                    getRowId={rows => rows.inst_id}\r\n                    rows = {t_data}\r\n                    columns = {task_acc_columns}\r\n                />\r\n            </div>\r\n      </div>\r\n      \r\n    );\r\n  };   \r\n}  \r\n"]},"metadata":{},"sourceType":"module"}